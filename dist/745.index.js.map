{"version":3,"sources":["webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/api/context.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/api/diag.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/api/propagation.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/api/trace.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/baggage/Baggage.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/baggage/Entry.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/baggage/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/baggage/internal/baggage.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/baggage/internal/symbol.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/common/Exception.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/common/Time.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/context/NoopContextManager.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/context/context.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/context/types.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/diag/consoleLogger.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/diag/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/diag/internal/logLevelLogger.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/diag/types.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/internal/global-utils.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/internal/semver.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/platform/browser/globalThis.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/platform/browser/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/propagation/NoopTextMapPropagator.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/propagation/TextMapPropagator.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/Event.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/ProxyTracer.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/ProxyTracerProvider.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/Sampler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/SamplingResult.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/SpanOptions.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/TimedEvent.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/attributes.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/link.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/link_context.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/span.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/span_context.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/span_kind.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/spancontext-utils.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/status.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/trace_flags.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/trace_state.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/tracer.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/trace/tracer_provider.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/api/build/src/version.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/ExportResult.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/baggage/propagation/HttpBaggage.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/common/attributes.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/common/global-error-handler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/common/logging-error-handler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/common/time.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/common/types.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/context/propagation/HttpTraceContext.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/context/propagation/composite.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/context/propagation/types.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/internal/validators.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/RandomIdGenerator.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/environment.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/hex-to-base64.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/performance.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/sdk-info.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/platform/browser/timer-util.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/trace/IdGenerator.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/trace/TraceState.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOffSampler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/trace/sampler/AlwaysOnSampler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/trace/sampler/ParentBasedSampler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/trace/sampler/TraceIdRatioBasedSampler.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/utils/environment.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/utils/sampling.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/utils/url.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/utils/wrap.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/core/build/src/version.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/Resource.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/config.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/constants.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/platform/browser/detect-resources.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/platform/browser/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/resources/build/src/types.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/semantic-conventions/build/src/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/semantic-conventions/build/src/resource/ResourceAttributes.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/semantic-conventions/build/src/resource/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/semantic-conventions/build/src/trace/SemanticAttributes.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/semantic-conventions/build/src/trace/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/BasicTracerProvider.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/MultiSpanProcessor.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/NoopSpanProcessor.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/Span.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/SpanProcessor.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/Tracer.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/config.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/enums.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/export/BatchSpanProcessor.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/export/ConsoleSpanExporter.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/export/InMemorySpanExporter.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/export/ReadableSpan.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/export/SimpleSpanProcessor.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/export/SpanExporter.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/index.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/types.js","webpack://stalk-demo-raft-consensus/./node_modules/@opentelemetry/tracing/build/src/utility.js","webpack://stalk-demo-raft-consensus/./node_modules/lodash.merge/index.js"],"names":["__spreadArrays","this","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","ContextAPI","NoopContextManager_1","global_utils_1","API_NAME","NOOP_CONTEXT_MANAGER","NoopContextManager","getInstance","_instance","prototype","setGlobalContextManager","contextManager","registerGlobal","active","_getContextManager","with","context","fn","thisArg","_a","args","_i","apply","bind","target","getGlobal","disable","unregisterGlobal","DiagAPI","logLevelLogger_1","types_1","_logProxy","funcName","logger","self","setLogger","logLevel","DiagLogLevel","INFO","createLogLevelDiagLogger","err","Error","error","stack","message","verbose","debug","info","warn","instance","PropagationAPI","NoopTextMapPropagator_1","TextMapPropagator_1","setGlobalPropagator","propagator","inject","carrier","setter","defaultTextMapSetter","_getGlobalPropagator","extract","getter","defaultTextMapGetter","fields","NOOP_TEXT_MAP_PROPAGATOR","TraceAPI","ProxyTracerProvider_1","spancontext_utils_1","_proxyTracerProvider","ProxyTracerProvider","isSpanContextValid","setGlobalTracerProvider","provider","setDelegate","getTracerProvider","getTracer","name","version","__createBinding","create","o","m","k2","undefined","enumerable","get","__exportStar","p","hasOwnProperty","call","baggageEntryMetadataFromString","createBaggage","baggage_1","symbol_1","entries","BaggageImpl","Map","str","__TYPE__","baggageEntryMetadataSymbol","toString","_entries","getEntry","key","entry","assign","getAllEntries","from","map","setEntry","newBaggage","set","removeEntry","delete","removeEntries","keys","keys_1","clear","Symbol","context_1","ROOT_CONTEXT","_context","enable","createContextKey","setBaggage","getBaggage","isInstrumentationSuppressed","unsuppressInstrumentation","suppressInstrumentation","getSpanContext","setSpanContext","setSpan","getSpan","NoopSpan_1","SPAN_KEY","SUPPRESS_INSTRUMENTATION_KEY","BAGGAGE_KEY","getValue","span","setValue","description","for","spanContext","NoopSpan","Boolean","baggage","BaseContext","parentContext","_currentContext","deleteValue","DiagConsoleLogger","consoleMap","n","c","_consoleFunc","orgArguments","console","theFunc","log","maxLevel","_filterFunc","theLevel","NONE","ALL","ERROR","WARN","DEBUG","VERBOSE","diag","propagation","trace","isValidSpanId","isValidTraceId","INVALID_SPAN_CONTEXT","INVALID_TRACEID","INVALID_SPANID","trace_1","propagation_1","diag_1","default","__1","platform_1","version_1","semver_1","major","VERSION","split","GLOBAL_OPENTELEMETRY_API_KEY","_global","_globalThis","type","allowOverride","api","_b","globalVersion","isCompatible","_makeCompatibilityCheck","re","ownVersion","acceptedVersions","Set","rejectedVersions","myVersionMatch","match","ownVersionParsed","_reject","v","add","_accept","has","globalVersionMatch","globalVersionParsed","globalThis","window","NoopTextMapPropagator","_carrier","_spanContext","setAttribute","_key","_value","setAttributes","_attributes","addEvent","_name","setStatus","_status","updateName","end","_endTime","isRecording","recordException","_exception","_time","NOOP_TRACER","NoopTracer","startSpan","options","root","parentFromContext","NOOP_TRACER_PROVIDER","NoopTracerProvider","NoopTracer_1","_version","ProxyTracer","_provider","_getTracer","_delegate","tracer","getDelegateTracer","ProxyTracer_1","NoopTracerProvider_1","getDelegate","delegate","SamplingDecision","SpanKind","trace_flags_1","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","traceId","test","spanId","traceFlags","TraceFlags","SpanStatusCode","ExportResultCode","HttpBaggage","MAX_TOTAL_LENGTH","MAX_PER_NAME_VALUE_PAIRS","MAX_NAME_VALUE_PAIRS","BAGGAGE_HEADER","api_1","keyPairs","_getKeyPairs","filter","pair","slice","headerValue","_serializeKeyPairs","reduce","hValue","current","encodeURIComponent","forEach","keyPair","_parsePairKeyValue","baggageEntry","metadata","valueProps","keyPairPart","shift","decodeURIComponent","trim","join","isAttributeValue","val","isArray","arr","element","isValidPrimitiveAttributeValue","isHomogeneousAttributeValueArray","sanitizeAttributes","attributes","out","globalErrorHandler","setGlobalErrorHandler","delegateHandler","loggingErrorHandler","handler","ex","JSON","stringify","result","getOwnPropertyNames","propertyName","String","getPrototypeOf","flattenException","stringifyException","isTimeInput","isTimeInputHrTime","hrTimeToMicroseconds","hrTimeToMilliseconds","hrTimeToNanoseconds","hrTimeToTimeStamp","hrTimeDuration","timeInputToHrTime","hrTime","SECOND_TO_NANOSECONDS","Math","pow","numberToHrtime","epochMillis","epochSeconds","seconds","trunc","Number","toFixed","getTimeOrigin","timeOrigin","otperformance","perf","timing","fetchStart","performanceNow","now","nanos","time","Date","getTime","TypeError","startTime","endTime","tmp","repeat","nanoString","substr","toISOString","replace","round","HttpTraceContext","parseTraceParent","TRACE_STATE_HEADER","TRACE_PARENT_HEADER","TraceState_1","TRACE_PARENT_REGEX","RegExp","traceParent","exec","parseInt","traceState","serialize","traceParentHeader","isRemote","traceStateHeader","state","TraceState","CompositePropagator","config","_propagators","propagators","_fields","x","y","concat","constructor","ctx","validateValue","validateKey","VALID_KEY_REGEX","VALID_VALUE_BASE_REGEX","INVALID_VALUE_COMMA_EQUAL_REGEX","RandomIdGenerator","generateTraceId","getIdGenerator","generateSpanId","SHARED_CHAR_CODES_ARRAY","bytes","floor","random","fromCharCode","getEnv","environment_1","_window","globalEnv","parseEnvironment","DEFAULT_ENVIRONMENT","hexToBase64","hexStr","hexStrLen","hexAsciiCharsStr","hexPair","substring","hexVal","btoa","performance","SDK_INFO","NAME","RUNTIME","LANGUAGE","unrefTimer","_timer","validators_1","rawTraceState","_internalState","_parse","_clone","_keys","agg","push","reverse","part","listMember","indexOf","size","AlwaysOffSampler","decision","NOT_RECORD","AlwaysOnSampler","RECORD_AND_SAMPLED","ParentBasedSampler","global_error_handler_1","AlwaysOffSampler_1","AlwaysOnSampler_1","_c","_d","_root","_remoteParentSampled","remoteParentSampled","_remoteParentNotSampled","remoteParentNotSampled","_localParentSampled","localParentSampled","_localParentNotSampled","localParentNotSampled","spanName","spanKind","links","SAMPLED","shouldSample","TraceIdRatioBasedSampler","_ratio","_normalize","_upperBound","_accumulate","ratio","isNaN","accumulation","pos","sampling_1","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","parseNumber","environment","values","min","max","Infinity","parseStringList","output","input","separator","givenValue","CONTAINER_NAME","ECS_CONTAINER_METADATA_URI_V4","ECS_CONTAINER_METADATA_URI","HOSTNAME","KUBERNETES_SERVICE_HOST","NAMESPACE","OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_EXPORTER_JAEGER_AGENT_HOST","OTEL_EXPORTER_JAEGER_ENDPOINT","OTEL_EXPORTER_JAEGER_PASSWORD","OTEL_EXPORTER_JAEGER_USER","OTEL_EXPORTER_ZIPKIN_ENDPOINT","OTEL_LOG_LEVEL","OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS","OTEL_RESOURCE_ATTRIBUTES","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_TRACES_SAMPLER","TracesSamplerValues","ParentBasedAlwaysOn","OTEL_TRACES_SAMPLER_ARG","logLevelMap","setLogLevelFromEnv","toUpperCase","env","urlMatches","url","urlToMatch","isUrlIgnored","ignoredUrls","ignoreUrl","isWrapped","func","__original","__unwrap","__wrapped","Resource","core_1","constants_1","EMPTY","TELEMETRY_SDK_RESOURCE","other","mergedAttributes","PROCESS_RESOURCE","SERVICE_RESOURCE","K8S_RESOURCE","HOST_RESOURCE","CONTAINER_RESOURCE","CLOUD_RESOURCE","PROVIDER","ACCOUNT_ID","REGION","ZONE","ID","IMAGE_NAME","IMAGE_TAG","TYPE","IMAGE_ID","IMAGE_VERSION","CLUSTER_NAME","NAMESPACE_NAME","POD_NAME","DEPLOYMENT_NAME","INSTANCE_ID","COMMAND","COMMAND_LINE","OWNER","PATH","PID","detectResources","Resource_1","async","createTelemetrySDKResource","TelemetrySdkLanguageValues","OsTypeValues","HostArchValues","AwsEcsLaunchtypeValues","CloudPlatformValues","CloudProviderValues","ResourceAttributes","CLOUD_PROVIDER","CLOUD_ACCOUNT_ID","CLOUD_REGION","CLOUD_AVAILABILITY_ZONE","CLOUD_PLATFORM","AWS_ECS_CONTAINER_ARN","AWS_ECS_CLUSTER_ARN","AWS_ECS_LAUNCHTYPE","AWS_ECS_TASK_ARN","AWS_ECS_TASK_FAMILY","AWS_ECS_TASK_REVISION","AWS_EKS_CLUSTER_ARN","AWS_LOG_GROUP_NAMES","AWS_LOG_GROUP_ARNS","AWS_LOG_STREAM_NAMES","AWS_LOG_STREAM_ARNS","CONTAINER_ID","CONTAINER_RUNTIME","CONTAINER_IMAGE_NAME","CONTAINER_IMAGE_TAG","DEPLOYMENT_ENVIRONMENT","FAAS_NAME","FAAS_ID","FAAS_VERSION","FAAS_INSTANCE","FAAS_MAX_MEMORY","HOST_ID","HOST_NAME","HOST_TYPE","HOST_ARCH","HOST_IMAGE_NAME","HOST_IMAGE_ID","HOST_IMAGE_VERSION","K8S_CLUSTER_NAME","K8S_NODE_NAME","K8S_NODE_UID","K8S_NAMESPACE_NAME","K8S_POD_UID","K8S_POD_NAME","K8S_CONTAINER_NAME","K8S_REPLICASET_UID","K8S_REPLICASET_NAME","K8S_DEPLOYMENT_UID","K8S_DEPLOYMENT_NAME","K8S_STATEFULSET_UID","K8S_STATEFULSET_NAME","K8S_DAEMONSET_UID","K8S_DAEMONSET_NAME","K8S_JOB_UID","K8S_JOB_NAME","K8S_CRONJOB_UID","K8S_CRONJOB_NAME","OS_TYPE","OS_DESCRIPTION","PROCESS_PID","PROCESS_EXECUTABLE_NAME","PROCESS_EXECUTABLE_PATH","PROCESS_COMMAND","PROCESS_COMMAND_LINE","PROCESS_COMMAND_ARGS","PROCESS_OWNER","PROCESS_RUNTIME_NAME","PROCESS_RUNTIME_VERSION","PROCESS_RUNTIME_DESCRIPTION","SERVICE_NAME","SERVICE_NAMESPACE","SERVICE_INSTANCE_ID","SERVICE_VERSION","TELEMETRY_SDK_NAME","TELEMETRY_SDK_LANGUAGE","TELEMETRY_SDK_VERSION","TELEMETRY_AUTO_VERSION","WEBENGINE_NAME","WEBENGINE_VERSION","WEBENGINE_DESCRIPTION","RpcGrpcStatusCodeValues","MessagingOperationValues","MessagingDestinationKindValues","HttpFlavorValues","NetTransportValues","FaasInvokedProviderValues","FaasDocumentOperationValues","FaasTriggerValues","DbCassandraConsistencyLevelValues","DbSystemValues","SemanticAttributes","DB_SYSTEM","DB_CONNECTION_STRING","DB_USER","DB_JDBC_DRIVER_CLASSNAME","DB_NAME","DB_STATEMENT","DB_OPERATION","DB_MSSQL_INSTANCE_NAME","DB_CASSANDRA_KEYSPACE","DB_CASSANDRA_PAGE_SIZE","DB_CASSANDRA_CONSISTENCY_LEVEL","DB_CASSANDRA_TABLE","DB_CASSANDRA_IDEMPOTENCE","DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT","DB_CASSANDRA_COORDINATOR_ID","DB_CASSANDRA_COORDINATOR_DC","DB_HBASE_NAMESPACE","DB_REDIS_DATABASE_INDEX","DB_MONGODB_COLLECTION","DB_SQL_TABLE","EXCEPTION_TYPE","EXCEPTION_MESSAGE","EXCEPTION_STACKTRACE","EXCEPTION_ESCAPED","FAAS_TRIGGER","FAAS_EXECUTION","FAAS_DOCUMENT_COLLECTION","FAAS_DOCUMENT_OPERATION","FAAS_DOCUMENT_TIME","FAAS_DOCUMENT_NAME","FAAS_TIME","FAAS_CRON","FAAS_COLDSTART","FAAS_INVOKED_NAME","FAAS_INVOKED_PROVIDER","FAAS_INVOKED_REGION","NET_TRANSPORT","NET_PEER_IP","NET_PEER_PORT","NET_PEER_NAME","NET_HOST_IP","NET_HOST_PORT","NET_HOST_NAME","PEER_SERVICE","ENDUSER_ID","ENDUSER_ROLE","ENDUSER_SCOPE","THREAD_ID","THREAD_NAME","CODE_FUNCTION","CODE_NAMESPACE","CODE_FILEPATH","CODE_LINENO","HTTP_METHOD","HTTP_URL","HTTP_TARGET","HTTP_HOST","HTTP_SCHEME","HTTP_STATUS_CODE","HTTP_FLAVOR","HTTP_USER_AGENT","HTTP_REQUEST_CONTENT_LENGTH","HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED","HTTP_RESPONSE_CONTENT_LENGTH","HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED","HTTP_SERVER_NAME","HTTP_ROUTE","HTTP_CLIENT_IP","AWS_DYNAMODB_TABLE_NAMES","AWS_DYNAMODB_CONSUMED_CAPACITY","AWS_DYNAMODB_ITEM_COLLECTION_METRICS","AWS_DYNAMODB_PROVISIONED_READ_CAPACITY","AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY","AWS_DYNAMODB_CONSISTENT_READ","AWS_DYNAMODB_PROJECTION","AWS_DYNAMODB_LIMIT","AWS_DYNAMODB_ATTRIBUTES_TO_GET","AWS_DYNAMODB_INDEX_NAME","AWS_DYNAMODB_SELECT","AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES","AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES","AWS_DYNAMODB_EXCLUSIVE_START_TABLE","AWS_DYNAMODB_TABLE_COUNT","AWS_DYNAMODB_SCAN_FORWARD","AWS_DYNAMODB_SEGMENT","AWS_DYNAMODB_TOTAL_SEGMENTS","AWS_DYNAMODB_COUNT","AWS_DYNAMODB_SCANNED_COUNT","AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS","AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES","MESSAGING_SYSTEM","MESSAGING_DESTINATION","MESSAGING_DESTINATION_KIND","MESSAGING_TEMP_DESTINATION","MESSAGING_PROTOCOL","MESSAGING_PROTOCOL_VERSION","MESSAGING_URL","MESSAGING_MESSAGE_ID","MESSAGING_CONVERSATION_ID","MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES","MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES","MESSAGING_OPERATION","MESSAGING_KAFKA_MESSAGE_KEY","MESSAGING_KAFKA_CONSUMER_GROUP","MESSAGING_KAFKA_CLIENT_ID","MESSAGING_KAFKA_PARTITION","MESSAGING_KAFKA_TOMBSTONE","RPC_SYSTEM","RPC_SERVICE","RPC_METHOD","RPC_GRPC_STATUS_CODE","BasicTracerProvider","resources_1","_1","config_1","MultiSpanProcessor_1","NoopSpanProcessor_1","merge","_registeredSpanProcessors","_tracers","activeSpanProcessor","NoopSpanProcessor","mergedConfig","DEFAULT_CONFIG","resource","_config","Tracer","spanProcessor","MultiSpanProcessor","_buildPropagatorFromEnv","shutdown","_registeredPropagators","uniquePropagatorNames","validPropagators","_getPropagator","list","item","_spanProcessors","promises","forceFlush","Promise","resolve","all","then","catch","onStart","onEnd","reject","_span","Span","semantic_conventions_1","enums_1","parentTracer","kind","parentSpanId","events","status","code","UNSET","_ended","_duration","instrumentationLibrary","_traceParams","getActiveTraceParams","_spanProcessor","getActiveSpanProcessor","_isSpanEnded","numberOfAttributesPerSpan","attributesOrStartTime","numberOfEventsPerSpan","exception","ExceptionEventName","Span_1","utility_1","_tracerProvider","localConfig","mergeConfig","_sampler","sampler","traceParams","_idGenerator","idGenerator","getParent","INTERNAL","samplingResult","buildSamplerFromEnv","numberOfLinksPerSpan","FALLBACK_OTEL_TRACES_SAMPLER","AlwaysOn","AlwaysOff","ParentBasedAlwaysOff","TraceIdRatio","getSamplerProbabilityFromEnv","ParentBasedTraceIdRatio","probability","BatchSpanProcessor","_exporter","_finishedSpans","_isShutdown","_shuttingDownPromise","_maxExportBatchSize","maxExportBatchSize","_maxQueueSize","maxQueueSize","_scheduledDelayMillis","scheduledDelayMillis","_exportTimeoutMillis","exportTimeoutMillis","_flushAll","_addToBuffer","e","_maybeStartTimer","ceil","_flushOneBatch","_clearTimer","timer","setTimeout","export","splice","clearTimeout","SUCCESS","ConsoleSpanExporter","spans","resultCallback","_sendSpans","parentId","id","timestamp","duration","done","_exportInfo","InMemorySpanExporter","_stopped","FAILED","SimpleSpanProcessor","userConfig","perInstanceDefaults","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","funcTag","objectTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","g","freeSelf","Function","freeExports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","require","types","binding","nodeIsTypedArray","isTypedArray","uid","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","IE_PROTO","nativeObjectToString","objectCtorString","reIsNative","Buffer","Uint8Array","getPrototype","allocUnsafe","arg","objectCreate","propertyIsEnumerable","symToStringTag","toStringTag","getNative","nativeIsBuffer","isBuffer","nativeMax","nativeNow","nativeCreate","baseCreate","object","proto","isObject","Hash","index","ListCache","MapCache","Stack","data","__data__","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","array","pop","getMapData","pairs","LARGE_ARRAY_SIZE","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseMerge","source","srcIndex","customizer","iteratee","keysFunc","iterable","props","baseFor","srcValue","mergeFunc","safeGet","stacked","typedArray","buffer","arrayBuffer","newValue","isCommon","isArr","isBuff","isTyped","isArrayLike","copyArray","isDeep","cloneBuffer","byteLength","byteOffset","Ctor","isPlainObject","isArguments","isNew","copyObject","keysIn","toPlainObject","isFunction","isPrototype","initCloneObject","baseMergeDeep","isMasked","toSource","baseIsNative","isIndex","setToString","count","lastCalled","stamp","remaining","shortOut","string","identity","isLength","baseUnary","inherited","isArg","isType","skipIndexes","baseTimes","arrayLikeKeys","nativeKeysIn","isProto","baseKeysIn","assigner","start","otherArgs","overRest","baseRest","sources","guard","isIterateeCall"],"mappings":"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","file":"745.index.js","sourcesContent":["\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextAPI = void 0;\nvar NoopContextManager_1 = require(\"../context/NoopContextManager\");\nvar global_utils_1 = require(\"../internal/global-utils\");\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager_1.NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager. Returns the initialized context manager\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        global_utils_1.registerGlobal(API_NAME, contextManager);\n        return contextManager;\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArrays([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param target function or event emitter to bind\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     */\n    ContextAPI.prototype.bind = function (target, context) {\n        if (context === void 0) { context = this.active(); }\n        return this._getContextManager().bind(target, context);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return global_utils_1.getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        global_utils_1.unregisterGlobal(API_NAME);\n    };\n    return ContextAPI;\n}());\nexports.ContextAPI = ContextAPI;\n//# sourceMappingURL=context.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagAPI = void 0;\nvar logLevelLogger_1 = require(\"../diag/internal/logLevelLogger\");\nvar types_1 = require(\"../diag/types\");\nvar global_utils_1 = require(\"../internal/global-utils\");\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var logger = global_utils_1.getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, \n                // work around Function.prototype.apply types\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                arguments);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a;\n            if (logLevel === void 0) { logLevel = types_1.DiagLogLevel.INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return;\n            }\n            global_utils_1.registerGlobal('diag', logLevelLogger_1.createLogLevelDiagLogger(logLevel, logger), true);\n        };\n        self.disable = function () {\n            global_utils_1.unregisterGlobal(API_NAME);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexports.DiagAPI = DiagAPI;\n//# sourceMappingURL=diag.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropagationAPI = void 0;\nvar NoopTextMapPropagator_1 = require(\"../propagation/NoopTextMapPropagator\");\nvar TextMapPropagator_1 = require(\"../propagation/TextMapPropagator\");\nvar global_utils_1 = require(\"../internal/global-utils\");\nvar API_NAME = 'propagation';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator. Returns the initialized propagator\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        global_utils_1.registerGlobal(API_NAME, propagator);\n        return propagator;\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = TextMapPropagator_1.defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = TextMapPropagator_1.defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        global_utils_1.unregisterGlobal(API_NAME);\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return global_utils_1.getGlobal(API_NAME) || NoopTextMapPropagator_1.NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexports.PropagationAPI = PropagationAPI;\n//# sourceMappingURL=propagation.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceAPI = void 0;\nvar ProxyTracerProvider_1 = require(\"../trace/ProxyTracerProvider\");\nvar spancontext_utils_1 = require(\"../trace/spancontext-utils\");\nvar global_utils_1 = require(\"../internal/global-utils\");\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider_1.ProxyTracerProvider();\n        this.isSpanContextValid = spancontext_utils_1.isSpanContextValid;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer. Returns the initialized global tracer provider\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        this._proxyTracerProvider.setDelegate(provider);\n        global_utils_1.registerGlobal(API_NAME, this._proxyTracerProvider);\n        return this._proxyTracerProvider;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return global_utils_1.getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        global_utils_1.unregisterGlobal(API_NAME);\n        this._proxyTracerProvider = new ProxyTracerProvider_1.ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexports.TraceAPI = TraceAPI;\n//# sourceMappingURL=trace.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Baggage.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Entry.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baggageEntryMetadataFromString = exports.createBaggage = void 0;\nvar baggage_1 = require(\"./internal/baggage\");\nvar symbol_1 = require(\"./internal/symbol\");\n__exportStar(require(\"./Baggage\"), exports);\n__exportStar(require(\"./Entry\"), exports);\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nfunction createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new baggage_1.BaggageImpl(new Map(Object.entries(entries)));\n}\nexports.createBaggage = createBaggage;\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nfunction baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        // @TODO log diagnostic\n        str = '';\n    }\n    return {\n        __TYPE__: symbol_1.baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\nexports.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaggageImpl = void 0;\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexports.BaggageImpl = BaggageImpl;\n//# sourceMappingURL=baggage.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baggageEntryMetadataSymbol = void 0;\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexports.baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Exception.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Time.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopContextManager = void 0;\nvar context_1 = require(\"./context\");\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return context_1.ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArrays([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (target, _context) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexports.NoopContextManager = NoopContextManager;\n//# sourceMappingURL=NoopContextManager.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ROOT_CONTEXT = exports.createContextKey = exports.setBaggage = exports.getBaggage = exports.isInstrumentationSuppressed = exports.unsuppressInstrumentation = exports.suppressInstrumentation = exports.getSpanContext = exports.setSpanContext = exports.setSpan = exports.getSpan = void 0;\nvar NoopSpan_1 = require(\"../trace/NoopSpan\");\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Shared key for indicating if instrumentation should be suppressed beyond\n * this current scope.\n */\nvar SUPPRESS_INSTRUMENTATION_KEY = createContextKey('OpenTelemetry Context Key SUPPRESS_INSTRUMENTATION');\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nfunction getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\nexports.getSpan = getSpan;\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nfunction setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\nexports.setSpan = setSpan;\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nfunction setSpanContext(context, spanContext) {\n    return setSpan(context, new NoopSpan_1.NoopSpan(spanContext));\n}\nexports.setSpanContext = setSpanContext;\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nfunction getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.context();\n}\nexports.getSpanContext = getSpanContext;\n/**\n * Sets value on context to indicate that instrumentation should\n * be suppressed beyond this current scope.\n *\n * @param context context to set the suppress instrumentation value on.\n */\nfunction suppressInstrumentation(context) {\n    return context.setValue(SUPPRESS_INSTRUMENTATION_KEY, true);\n}\nexports.suppressInstrumentation = suppressInstrumentation;\n/**\n * Sets value on context to indicate that instrumentation should\n * no-longer be suppressed beyond this current scope.\n *\n * @param context context to set the suppress instrumentation value on.\n */\nfunction unsuppressInstrumentation(context) {\n    return context.setValue(SUPPRESS_INSTRUMENTATION_KEY, false);\n}\nexports.unsuppressInstrumentation = unsuppressInstrumentation;\n/**\n * Return current suppress instrumentation value for the given context,\n * if it exists.\n *\n * @param context context check for the suppress instrumentation value.\n */\nfunction isInstrumentationSuppressed(context) {\n    return Boolean(context.getValue(SUPPRESS_INSTRUMENTATION_KEY));\n}\nexports.isInstrumentationSuppressed = isInstrumentationSuppressed;\n/**\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nfunction getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\nexports.getBaggage = getBaggage;\n/**\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nfunction setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\nexports.setBaggage = setBaggage;\n/** Get a key to uniquely identify a context value */\nfunction createContextKey(description) {\n    return Symbol.for(description);\n}\nexports.createContextKey = createContextKey;\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexports.ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagConsoleLogger = void 0;\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var orgArguments = arguments;\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, orgArguments);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexports.DiagConsoleLogger = DiagConsoleLogger;\n//# sourceMappingURL=consoleLogger.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./consoleLogger\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogLevelDiagLogger = void 0;\nvar types_1 = require(\"../types\");\nfunction createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < types_1.DiagLogLevel.NONE) {\n        maxLevel = types_1.DiagLogLevel.NONE;\n    }\n    else if (maxLevel > types_1.DiagLogLevel.ALL) {\n        maxLevel = types_1.DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', types_1.DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', types_1.DiagLogLevel.WARN),\n        info: _filterFunc('info', types_1.DiagLogLevel.INFO),\n        debug: _filterFunc('debug', types_1.DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', types_1.DiagLogLevel.VERBOSE),\n    };\n}\nexports.createLogLevelDiagLogger = createLogLevelDiagLogger;\n//# sourceMappingURL=logLevelLogger.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagLogLevel = void 0;\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nvar DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel = exports.DiagLogLevel || (exports.DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diag = exports.propagation = exports.trace = exports.context = exports.isValidSpanId = exports.isValidTraceId = exports.isSpanContextValid = exports.INVALID_SPAN_CONTEXT = exports.INVALID_TRACEID = exports.INVALID_SPANID = void 0;\n__exportStar(require(\"./baggage\"), exports);\n__exportStar(require(\"./common/Exception\"), exports);\n__exportStar(require(\"./common/Time\"), exports);\n__exportStar(require(\"./diag\"), exports);\n__exportStar(require(\"./propagation/NoopTextMapPropagator\"), exports);\n__exportStar(require(\"./propagation/TextMapPropagator\"), exports);\n__exportStar(require(\"./trace/attributes\"), exports);\n__exportStar(require(\"./trace/Event\"), exports);\n__exportStar(require(\"./trace/link_context\"), exports);\n__exportStar(require(\"./trace/link\"), exports);\n__exportStar(require(\"./trace/NoopTracer\"), exports);\n__exportStar(require(\"./trace/NoopTracerProvider\"), exports);\n__exportStar(require(\"./trace/ProxyTracer\"), exports);\n__exportStar(require(\"./trace/ProxyTracerProvider\"), exports);\n__exportStar(require(\"./trace/Sampler\"), exports);\n__exportStar(require(\"./trace/SamplingResult\"), exports);\n__exportStar(require(\"./trace/span_context\"), exports);\n__exportStar(require(\"./trace/span_kind\"), exports);\n__exportStar(require(\"./trace/span\"), exports);\n__exportStar(require(\"./trace/SpanOptions\"), exports);\n__exportStar(require(\"./trace/status\"), exports);\n__exportStar(require(\"./trace/TimedEvent\"), exports);\n__exportStar(require(\"./trace/trace_flags\"), exports);\n__exportStar(require(\"./trace/trace_state\"), exports);\n__exportStar(require(\"./trace/tracer_provider\"), exports);\n__exportStar(require(\"./trace/tracer\"), exports);\nvar spancontext_utils_1 = require(\"./trace/spancontext-utils\");\nObject.defineProperty(exports, \"INVALID_SPANID\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_SPANID; } });\nObject.defineProperty(exports, \"INVALID_TRACEID\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_TRACEID; } });\nObject.defineProperty(exports, \"INVALID_SPAN_CONTEXT\", { enumerable: true, get: function () { return spancontext_utils_1.INVALID_SPAN_CONTEXT; } });\nObject.defineProperty(exports, \"isSpanContextValid\", { enumerable: true, get: function () { return spancontext_utils_1.isSpanContextValid; } });\nObject.defineProperty(exports, \"isValidTraceId\", { enumerable: true, get: function () { return spancontext_utils_1.isValidTraceId; } });\nObject.defineProperty(exports, \"isValidSpanId\", { enumerable: true, get: function () { return spancontext_utils_1.isValidSpanId; } });\n__exportStar(require(\"./context/context\"), exports);\n__exportStar(require(\"./context/NoopContextManager\"), exports);\n__exportStar(require(\"./context/types\"), exports);\nvar context_1 = require(\"./api/context\");\n/** Entrypoint for context API */\nexports.context = context_1.ContextAPI.getInstance();\nvar trace_1 = require(\"./api/trace\");\n/** Entrypoint for trace API */\nexports.trace = trace_1.TraceAPI.getInstance();\nvar propagation_1 = require(\"./api/propagation\");\n/** Entrypoint for propagation API */\nexports.propagation = propagation_1.PropagationAPI.getInstance();\nvar diag_1 = require(\"./api/diag\");\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexports.diag = diag_1.DiagAPI.instance();\nexports.default = {\n    trace: exports.trace,\n    context: exports.context,\n    propagation: exports.propagation,\n    diag: exports.diag,\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unregisterGlobal = exports.getGlobal = exports.registerGlobal = void 0;\nvar __1 = require(\"..\");\nvar platform_1 = require(\"../platform\");\nvar version_1 = require(\"../version\");\nvar semver_1 = require(\"./semver\");\nvar major = version_1.VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"io.opentelemetry.js.api.\" + major);\nvar _global = platform_1._globalThis;\nfunction registerGlobal(type, instance, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    _global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: version_1.VERSION,\n    };\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        __1.diag.error(err.stack || err.message);\n        return;\n    }\n    if (api.version !== version_1.VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        __1.diag.error(err.stack || err.message);\n        return;\n    }\n    api[type] = instance;\n}\nexports.registerGlobal = registerGlobal;\nfunction getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !semver_1.isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexports.getGlobal = getGlobal;\nfunction unregisterGlobal(type) {\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\nexports.unregisterGlobal = unregisterGlobal;\n//# sourceMappingURL=global-utils.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCompatible = exports._makeCompatibilityCheck = void 0;\nvar version_1 = require(\"../version\");\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(?:-(.*))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nfunction _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n    };\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n        };\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\nexports._makeCompatibilityCheck = _makeCompatibilityCheck;\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexports.isCompatible = _makeCompatibilityCheck(version_1.VERSION);\n//# sourceMappingURL=semver.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._globalThis = void 0;\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexports._globalThis = typeof globalThis === 'object' ? globalThis : window;\n//# sourceMappingURL=globalThis.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./globalThis\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TEXT_MAP_PROPAGATOR = exports.NoopTextMapPropagator = void 0;\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexports.NoopTextMapPropagator = NoopTextMapPropagator;\nexports.NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n//# sourceMappingURL=NoopTextMapPropagator.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultTextMapSetter = exports.defaultTextMapGetter = void 0;\nexports.defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexports.defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Event.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopSpan = void 0;\nvar spancontext_utils_1 = require(\"./spancontext-utils\");\n/**\n * The NoopSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NoopSpan = /** @class */ (function () {\n    function NoopSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = spancontext_utils_1.INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NoopSpan.prototype.context = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for noopSpan.\n    NoopSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NoopSpan.prototype.recordException = function (_exception, _time) { };\n    return NoopSpan;\n}());\nexports.NoopSpan = NoopSpan;\n//# sourceMappingURL=NoopSpan.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER = exports.NoopTracer = void 0;\nvar context_1 = require(\"../context/context\");\nvar NoopSpan_1 = require(\"./NoopSpan\");\nvar spancontext_utils_1 = require(\"./spancontext-utils\");\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NoopSpan_1.NoopSpan();\n        }\n        var parentFromContext = context && context_1.getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            spancontext_utils_1.isSpanContextValid(parentFromContext)) {\n            return new NoopSpan_1.NoopSpan(parentFromContext);\n        }\n        else {\n            return new NoopSpan_1.NoopSpan();\n        }\n    };\n    return NoopTracer;\n}());\nexports.NoopTracer = NoopTracer;\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\nexports.NOOP_TRACER = new NoopTracer();\n//# sourceMappingURL=NoopTracer.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_TRACER_PROVIDER = exports.NoopTracerProvider = void 0;\nvar NoopTracer_1 = require(\"./NoopTracer\");\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version) {\n        return NoopTracer_1.NOOP_TRACER;\n    };\n    return NoopTracerProvider;\n}());\nexports.NoopTracerProvider = NoopTracerProvider;\nexports.NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n//# sourceMappingURL=NoopTracerProvider.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyTracer = void 0;\nvar NoopTracer_1 = require(\"./NoopTracer\");\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version);\n        if (!tracer) {\n            return NoopTracer_1.NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexports.ProxyTracer = ProxyTracer;\n//# sourceMappingURL=ProxyTracer.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyTracerProvider = void 0;\nvar ProxyTracer_1 = require(\"./ProxyTracer\");\nvar NoopTracerProvider_1 = require(\"./NoopTracerProvider\");\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new ProxyTracer_1.ProxyTracer(this, name, version));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NoopTracerProvider_1.NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);\n    };\n    return ProxyTracerProvider;\n}());\nexports.ProxyTracerProvider = ProxyTracerProvider;\n//# sourceMappingURL=ProxyTracerProvider.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Sampler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SamplingDecision = void 0;\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nvar SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision = exports.SamplingDecision || (exports.SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanOptions.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=TimedEvent.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attributes.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=link.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=link_context.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=span.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanKind = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSpanContextValid = exports.isValidSpanId = exports.isValidTraceId = exports.INVALID_SPAN_CONTEXT = exports.INVALID_TRACEID = exports.INVALID_SPANID = void 0;\nvar trace_flags_1 = require(\"./trace_flags\");\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexports.INVALID_SPANID = '0000000000000000';\nexports.INVALID_TRACEID = '00000000000000000000000000000000';\nexports.INVALID_SPAN_CONTEXT = {\n    traceId: exports.INVALID_TRACEID,\n    spanId: exports.INVALID_SPANID,\n    traceFlags: trace_flags_1.TraceFlags.NONE,\n};\nfunction isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== exports.INVALID_TRACEID;\n}\nexports.isValidTraceId = isValidTraceId;\nfunction isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== exports.INVALID_SPANID;\n}\nexports.isValidSpanId = isValidSpanId;\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nfunction isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\nexports.isSpanContextValid = isSpanContextValid;\n//# sourceMappingURL=spancontext-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpanStatusCode = void 0;\n/**\n * An enumeration of status codes.\n */\nvar SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode = exports.SpanStatusCode || (exports.SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceFlags = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags = exports.TraceFlags || (exports.TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace_state.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tracer.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tracer_provider.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.18.1';\n//# sourceMappingURL=version.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExportResultCode = void 0;\nvar ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode = exports.ExportResultCode || (exports.ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpBaggage = exports.MAX_TOTAL_LENGTH = exports.MAX_PER_NAME_VALUE_PAIRS = exports.MAX_NAME_VALUE_PAIRS = exports.BAGGAGE_HEADER = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst KEY_PAIR_SEPARATOR = '=';\nconst PROPERTIES_SEPARATOR = ';';\nconst ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexports.BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexports.MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexports.MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexports.MAX_TOTAL_LENGTH = 8192;\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nclass HttpBaggage {\n    inject(context, carrier, setter) {\n        const baggage = api_1.getBaggage(context);\n        if (!baggage || api_1.isInstrumentationSuppressed(context))\n            return;\n        const keyPairs = this._getKeyPairs(baggage)\n            .filter((pair) => {\n            return pair.length <= exports.MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, exports.MAX_NAME_VALUE_PAIRS);\n        const headerValue = this._serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, exports.BAGGAGE_HEADER, headerValue);\n        }\n    }\n    _serializeKeyPairs(keyPairs) {\n        return keyPairs.reduce((hValue, current) => {\n            const value = `${hValue}${hValue !== '' ? ITEMS_SEPARATOR : ''}${current}`;\n            return value.length > exports.MAX_TOTAL_LENGTH ? hValue : value;\n        }, '');\n    }\n    _getKeyPairs(baggage) {\n        return baggage\n            .getAllEntries()\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`);\n    }\n    extract(context, carrier, getter) {\n        const headerValue = getter.get(carrier, exports.BAGGAGE_HEADER);\n        if (!headerValue)\n            return context;\n        const baggage = {};\n        if (headerValue.length === 0) {\n            return context;\n        }\n        const pairs = headerValue.split(ITEMS_SEPARATOR);\n        pairs.forEach(entry => {\n            const keyPair = this._parsePairKeyValue(entry);\n            if (keyPair) {\n                const baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return api_1.setBaggage(context, api_1.createBaggage(baggage));\n    }\n    _parsePairKeyValue(entry) {\n        const valueProps = entry.split(PROPERTIES_SEPARATOR);\n        if (valueProps.length <= 0)\n            return;\n        const keyPairPart = valueProps.shift();\n        if (!keyPairPart)\n            return;\n        const keyPair = keyPairPart.split(KEY_PAIR_SEPARATOR);\n        if (keyPair.length !== 2)\n            return;\n        const key = decodeURIComponent(keyPair[0].trim());\n        const value = decodeURIComponent(keyPair[1].trim());\n        let metadata;\n        if (valueProps.length > 0) {\n            metadata = api_1.baggageEntryMetadataFromString(valueProps.join(PROPERTIES_SEPARATOR));\n        }\n        return { key, value, metadata };\n    }\n    fields() {\n        return [exports.BAGGAGE_HEADER];\n    }\n}\nexports.HttpBaggage = HttpBaggage;\n//# sourceMappingURL=HttpBaggage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAttributeValue = exports.sanitizeAttributes = void 0;\nfunction sanitizeAttributes(attributes) {\n    const out = {};\n    if (attributes == null || typeof attributes !== 'object') {\n        return out;\n    }\n    for (const [k, v] of Object.entries(attributes)) {\n        if (isAttributeValue(v)) {\n            if (Array.isArray(v)) {\n                out[k] = v.slice();\n            }\n            else {\n                out[k] = v;\n            }\n        }\n    }\n    return out;\n}\nexports.sanitizeAttributes = sanitizeAttributes;\nfunction isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nexports.isAttributeValue = isAttributeValue;\nfunction isHomogeneousAttributeValueArray(arr) {\n    let type;\n    for (const element of arr) {\n        // null/undefined elements are allowed\n        if (element == null)\n            continue;\n        if (!type) {\n            if (isValidPrimitiveAttributeValue(element)) {\n                type = typeof element;\n                continue;\n            }\n            // encountered an invalid primitive\n            return false;\n        }\n        if (typeof element === type) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n            return true;\n        case 'boolean':\n            return true;\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.globalErrorHandler = exports.setGlobalErrorHandler = void 0;\nconst logging_error_handler_1 = require(\"./logging-error-handler\");\n/** The global error handler delegate */\nlet delegateHandler = logging_error_handler_1.loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nfunction setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\nexports.setGlobalErrorHandler = setGlobalErrorHandler;\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nconst globalErrorHandler = (ex) => {\n    try {\n        delegateHandler(ex);\n    }\n    catch (_a) { } // eslint-disable-line no-empty\n};\nexports.globalErrorHandler = globalErrorHandler;\n//# sourceMappingURL=global-error-handler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loggingErrorHandler = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nfunction loggingErrorHandler() {\n    return (ex) => {\n        api_1.diag.error(stringifyException(ex));\n    };\n}\nexports.loggingErrorHandler = loggingErrorHandler;\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    const result = {};\n    let current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(propertyName => {\n            if (result[propertyName])\n                return;\n            const value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTimeInput = exports.isTimeInputHrTime = exports.hrTimeToMicroseconds = exports.hrTimeToMilliseconds = exports.hrTimeToNanoseconds = exports.hrTimeToTimeStamp = exports.hrTimeDuration = exports.timeInputToHrTime = exports.hrTime = void 0;\nconst platform_1 = require(\"../platform\");\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number to HrTime\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis) {\n    const epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    const seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    const nanos = Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n        SECOND_TO_NANOSECONDS;\n    return [seconds, nanos];\n}\nfunction getTimeOrigin() {\n    let timeOrigin = platform_1.otperformance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        const perf = platform_1.otperformance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nfunction hrTime(performanceNow) {\n    const timeOrigin = numberToHrtime(getTimeOrigin());\n    const now = numberToHrtime(typeof performanceNow === 'number' ? performanceNow : platform_1.otperformance.now());\n    let seconds = timeOrigin[0] + now[0];\n    let nanos = timeOrigin[1] + now[1];\n    // Nanoseconds\n    if (nanos > SECOND_TO_NANOSECONDS) {\n        nanos -= SECOND_TO_NANOSECONDS;\n        seconds += 1;\n    }\n    return [seconds, nanos];\n}\nexports.hrTime = hrTime;\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nfunction timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return numberToHrtime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return numberToHrtime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\nexports.timeInputToHrTime = timeInputToHrTime;\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nfunction hrTimeDuration(startTime, endTime) {\n    let seconds = endTime[0] - startTime[0];\n    let nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\nexports.hrTimeDuration = hrTimeDuration;\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param hrTime\n */\nfunction hrTimeToTimeStamp(hrTime) {\n    const precision = NANOSECOND_DIGITS;\n    const tmp = `${'0'.repeat(precision)}${hrTime[1]}Z`;\n    const nanoString = tmp.substr(tmp.length - precision - 1);\n    const date = new Date(hrTime[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\nexports.hrTimeToTimeStamp = hrTimeToTimeStamp;\n/**\n * Convert hrTime to nanoseconds.\n * @param hrTime\n */\nfunction hrTimeToNanoseconds(hrTime) {\n    return hrTime[0] * SECOND_TO_NANOSECONDS + hrTime[1];\n}\nexports.hrTimeToNanoseconds = hrTimeToNanoseconds;\n/**\n * Convert hrTime to milliseconds.\n * @param hrTime\n */\nfunction hrTimeToMilliseconds(hrTime) {\n    return Math.round(hrTime[0] * 1e3 + hrTime[1] / 1e6);\n}\nexports.hrTimeToMilliseconds = hrTimeToMilliseconds;\n/**\n * Convert hrTime to microseconds.\n * @param hrTime\n */\nfunction hrTimeToMicroseconds(hrTime) {\n    return Math.round(hrTime[0] * 1e6 + hrTime[1] / 1e3);\n}\nexports.hrTimeToMicroseconds = hrTimeToMicroseconds;\n/**\n * check if time is HrTime\n * @param value\n */\nfunction isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\nexports.isTimeInputHrTime = isTimeInputHrTime;\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nfunction isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\nexports.isTimeInput = isTimeInput;\n//# sourceMappingURL=time.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpTraceContext = exports.parseTraceParent = exports.TRACE_STATE_HEADER = exports.TRACE_PARENT_HEADER = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst TraceState_1 = require(\"../../trace/TraceState\");\nexports.TRACE_PARENT_HEADER = 'traceparent';\nexports.TRACE_STATE_HEADER = 'tracestate';\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(`^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`);\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nfunction parseTraceParent(traceParent) {\n    const match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\nexports.parseTraceParent = parseTraceParent;\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nclass HttpTraceContext {\n    inject(context, carrier, setter) {\n        const spanContext = api_1.getSpanContext(context);\n        if (!spanContext ||\n            api_1.isInstrumentationSuppressed(context) ||\n            !api_1.isSpanContextValid(spanContext))\n            return;\n        const traceParent = `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-0${Number(spanContext.traceFlags || api_1.TraceFlags.NONE).toString(16)}`;\n        setter.set(carrier, exports.TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, exports.TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    }\n    extract(context, carrier, getter) {\n        const traceParentHeader = getter.get(carrier, exports.TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        const traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        const spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        const traceStateHeader = getter.get(carrier, exports.TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            const state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState_1.TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return api_1.setSpanContext(context, spanContext);\n    }\n    fields() {\n        return [exports.TRACE_PARENT_HEADER, exports.TRACE_STATE_HEADER];\n    }\n}\nexports.HttpTraceContext = HttpTraceContext;\n//# sourceMappingURL=HttpTraceContext.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompositePropagator = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\n/** Combines multiple propagators into a single propagator. */\nclass CompositePropagator {\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    constructor(config = {}) {\n        var _a;\n        this._propagators = (_a = config.propagators) !== null && _a !== void 0 ? _a : [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n            .reduce((x, y) => x.concat(y), [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    inject(context, carrier, setter) {\n        for (const propagator of this._propagators) {\n            try {\n                propagator.inject(context, carrier, setter);\n            }\n            catch (err) {\n                api_1.diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n        }\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    extract(context, carrier, getter) {\n        return this._propagators.reduce((ctx, propagator) => {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                api_1.diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n            return ctx;\n        }, context);\n    }\n    fields() {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    }\n}\nexports.CompositePropagator = CompositePropagator;\n//# sourceMappingURL=composite.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./common/attributes\"), exports);\n__exportStar(require(\"./common/global-error-handler\"), exports);\n__exportStar(require(\"./common/logging-error-handler\"), exports);\n__exportStar(require(\"./common/time\"), exports);\n__exportStar(require(\"./common/types\"), exports);\n__exportStar(require(\"./ExportResult\"), exports);\n__exportStar(require(\"./version\"), exports);\n__exportStar(require(\"./context/propagation/composite\"), exports);\n__exportStar(require(\"./context/propagation/HttpTraceContext\"), exports);\n__exportStar(require(\"./context/propagation/types\"), exports);\n__exportStar(require(\"./baggage/propagation/HttpBaggage\"), exports);\n__exportStar(require(\"./platform\"), exports);\n__exportStar(require(\"./trace/sampler/AlwaysOffSampler\"), exports);\n__exportStar(require(\"./trace/sampler/AlwaysOnSampler\"), exports);\n__exportStar(require(\"./trace/sampler/ParentBasedSampler\"), exports);\n__exportStar(require(\"./trace/sampler/TraceIdRatioBasedSampler\"), exports);\n__exportStar(require(\"./trace/TraceState\"), exports);\n__exportStar(require(\"./trace/IdGenerator\"), exports);\n__exportStar(require(\"./utils/url\"), exports);\n__exportStar(require(\"./utils/wrap\"), exports);\n__exportStar(require(\"./utils/sampling\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateValue = exports.validateKey = void 0;\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nfunction validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\nexports.validateKey = validateKey;\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nfunction validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\nexports.validateValue = validateValue;\n//# sourceMappingURL=validators.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomIdGenerator = void 0;\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\nclass RandomIdGenerator {\n    constructor() {\n        /**\n         * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n         * characters corresponding to 128 bits.\n         */\n        this.generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n        /**\n         * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n         * characters corresponding to 64 bits.\n         */\n        this.generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n    }\n}\nexports.RandomIdGenerator = RandomIdGenerator;\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (let i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnv = void 0;\nconst environment_1 = require(\"../../utils/environment\");\n/**\n * Gets the environment variables\n */\nfunction getEnv() {\n    const _window = window;\n    const globalEnv = environment_1.parseEnvironment(_window);\n    return Object.assign({}, environment_1.DEFAULT_ENVIRONMENT, globalEnv);\n}\nexports.getEnv = getEnv;\n//# sourceMappingURL=environment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToBase64 = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction hexToBase64(hexStr) {\n    const hexStrLen = hexStr.length;\n    let hexAsciiCharsStr = '';\n    for (let i = 0; i < hexStrLen; i += 2) {\n        const hexPair = hexStr.substring(i, i + 2);\n        const hexVal = parseInt(hexPair, 16);\n        hexAsciiCharsStr += String.fromCharCode(hexVal);\n    }\n    return btoa(hexAsciiCharsStr);\n}\nexports.hexToBase64 = hexToBase64;\n//# sourceMappingURL=hex-to-base64.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./environment\"), exports);\n__exportStar(require(\"./hex-to-base64\"), exports);\n__exportStar(require(\"./RandomIdGenerator\"), exports);\n__exportStar(require(\"./performance\"), exports);\n__exportStar(require(\"./sdk-info\"), exports);\n__exportStar(require(\"./timer-util\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.otperformance = void 0;\nexports.otperformance = performance;\n//# sourceMappingURL=performance.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDK_INFO = void 0;\nconst version_1 = require(\"../../version\");\n/** Constants describing the SDK in use */\nexports.SDK_INFO = {\n    NAME: 'opentelemetry',\n    RUNTIME: 'browser',\n    LANGUAGE: 'webjs',\n    VERSION: version_1.VERSION,\n};\n//# sourceMappingURL=sdk-info.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unrefTimer = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction unrefTimer(_timer) { }\nexports.unrefTimer = unrefTimer;\n//# sourceMappingURL=timer-util.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=IdGenerator.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceState = void 0;\nconst validators_1 = require(\"../internal/validators\");\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nclass TraceState {\n    constructor(rawTraceState) {\n        this._internalState = new Map();\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    set(key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        const traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    }\n    unset(key) {\n        const traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    }\n    get(key) {\n        return this._internalState.get(key);\n    }\n    serialize() {\n        return this._keys()\n            .reduce((agg, key) => {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    }\n    _parse(rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce((agg, part) => {\n            const listMember = part.trim(); // Optional Whitespace (OWS) handling\n            const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                const key = listMember.slice(0, i);\n                const value = listMember.slice(i + 1, part.length);\n                if (validators_1.validateKey(key) && validators_1.validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    }\n    _keys() {\n        return Array.from(this._internalState.keys()).reverse();\n    }\n    _clone() {\n        const traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    }\n}\nexports.TraceState = TraceState;\n//# sourceMappingURL=TraceState.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysOffSampler = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\n/** Sampler that samples no traces. */\nclass AlwaysOffSampler {\n    shouldSample() {\n        return {\n            decision: api_1.SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return 'AlwaysOffSampler';\n    }\n}\nexports.AlwaysOffSampler = AlwaysOffSampler;\n//# sourceMappingURL=AlwaysOffSampler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysOnSampler = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\n/** Sampler that samples all traces. */\nclass AlwaysOnSampler {\n    shouldSample() {\n        return {\n            decision: api_1.SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    }\n    toString() {\n        return 'AlwaysOnSampler';\n    }\n}\nexports.AlwaysOnSampler = AlwaysOnSampler;\n//# sourceMappingURL=AlwaysOnSampler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParentBasedSampler = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst global_error_handler_1 = require(\"../../common/global-error-handler\");\nconst AlwaysOffSampler_1 = require(\"./AlwaysOffSampler\");\nconst AlwaysOnSampler_1 = require(\"./AlwaysOnSampler\");\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nclass ParentBasedSampler {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this._root = config.root;\n        if (!this._root) {\n            global_error_handler_1.globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler_1.AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            (_a = config.remoteParentSampled) !== null && _a !== void 0 ? _a : new AlwaysOnSampler_1.AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            (_b = config.remoteParentNotSampled) !== null && _b !== void 0 ? _b : new AlwaysOffSampler_1.AlwaysOffSampler();\n        this._localParentSampled =\n            (_c = config.localParentSampled) !== null && _c !== void 0 ? _c : new AlwaysOnSampler_1.AlwaysOnSampler();\n        this._localParentNotSampled =\n            (_d = config.localParentNotSampled) !== null && _d !== void 0 ? _d : new AlwaysOffSampler_1.AlwaysOffSampler();\n    }\n    shouldSample(context, traceId, spanName, spanKind, attributes, links) {\n        const parentContext = api_1.getSpanContext(context);\n        if (!parentContext) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & api_1.TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & api_1.TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    }\n    toString() {\n        return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n    }\n}\nexports.ParentBasedSampler = ParentBasedSampler;\n//# sourceMappingURL=ParentBasedSampler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceIdRatioBasedSampler = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nclass TraceIdRatioBasedSampler {\n    constructor(_ratio = 0) {\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    shouldSample(context, traceId) {\n        return {\n            decision: api_1.isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? api_1.SamplingDecision.RECORD_AND_SAMPLED\n                : api_1.SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return `TraceIdRatioBased{${this._ratio}}`;\n    }\n    _normalize(ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    }\n    _accumulate(traceId) {\n        let accumulation = 0;\n        for (let i = 0; i < traceId.length / 8; i++) {\n            const pos = i * 8;\n            const part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    }\n}\nexports.TraceIdRatioBasedSampler = TraceIdRatioBasedSampler;\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEnvironment = exports.DEFAULT_ENVIRONMENT = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst sampling_1 = require(\"./sampling\");\nconst DEFAULT_LIST_SEPARATOR = ',';\n/**\n * Environment interface to define all names\n */\nconst ENVIRONMENT_NUMBERS_KEYS = [\n    'OTEL_BSP_EXPORT_TIMEOUT',\n    'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n    'OTEL_BSP_MAX_QUEUE_SIZE',\n    'OTEL_BSP_SCHEDULE_DELAY',\n    'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n    'OTEL_SPAN_EVENT_COUNT_LIMIT',\n    'OTEL_SPAN_LINK_COUNT_LIMIT',\n];\nfunction isEnvVarANumber(key) {\n    return (ENVIRONMENT_NUMBERS_KEYS.indexOf(key) > -1);\n}\nconst ENVIRONMENT_LISTS_KEYS = [\n    'OTEL_NO_PATCH_MODULES',\n    'OTEL_PROPAGATORS',\n];\nfunction isEnvVarAList(key) {\n    return ENVIRONMENT_LISTS_KEYS.indexOf(key) > -1;\n}\n/**\n * Default environment variables\n */\nexports.DEFAULT_ENVIRONMENT = {\n    CONTAINER_NAME: '',\n    ECS_CONTAINER_METADATA_URI_V4: '',\n    ECS_CONTAINER_METADATA_URI: '',\n    HOSTNAME: '',\n    KUBERNETES_SERVICE_HOST: '',\n    NAMESPACE: '',\n    OTEL_BSP_EXPORT_TIMEOUT: 30000,\n    OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n    OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n    OTEL_BSP_SCHEDULE_DELAY: 5000,\n    OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n    OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n    OTEL_EXPORTER_JAEGER_PASSWORD: '',\n    OTEL_EXPORTER_JAEGER_USER: '',\n    OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n    OTEL_LOG_LEVEL: api_1.DiagLogLevel.INFO,\n    OTEL_NO_PATCH_MODULES: [],\n    OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n    OTEL_RESOURCE_ATTRIBUTES: '',\n    OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: 128,\n    OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n    OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n    OTEL_TRACES_SAMPLER: sampling_1.TracesSamplerValues.ParentBasedAlwaysOn,\n    OTEL_TRACES_SAMPLER_ARG: '',\n};\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(name, environment, values, min = -Infinity, max = Infinity) {\n    if (typeof values[name] !== 'undefined') {\n        const value = Number(values[name]);\n        if (!isNaN(value)) {\n            if (value < min) {\n                environment[name] = min;\n            }\n            else if (value > max) {\n                environment[name] = max;\n            }\n            else {\n                environment[name] = value;\n            }\n        }\n    }\n}\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(name, output, input, separator = DEFAULT_LIST_SEPARATOR) {\n    const givenValue = input[name];\n    if (typeof givenValue === 'string') {\n        output[name] = givenValue.split(separator).map(v => v.trim());\n    }\n}\n// The support string -> DiagLogLevel mappings\nconst logLevelMap = {\n    ALL: api_1.DiagLogLevel.ALL,\n    VERBOSE: api_1.DiagLogLevel.VERBOSE,\n    DEBUG: api_1.DiagLogLevel.DEBUG,\n    INFO: api_1.DiagLogLevel.INFO,\n    WARN: api_1.DiagLogLevel.WARN,\n    ERROR: api_1.DiagLogLevel.ERROR,\n    NONE: api_1.DiagLogLevel.NONE,\n};\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(key, environment, values) {\n    const value = values[key];\n    if (typeof value === 'string') {\n        const theLevel = logLevelMap[value.toUpperCase()];\n        if (theLevel != null) {\n            environment[key] = theLevel;\n        }\n    }\n}\n/**\n * Parses environment values\n * @param values\n */\nfunction parseEnvironment(values) {\n    const environment = {};\n    for (const env in exports.DEFAULT_ENVIRONMENT) {\n        const key = env;\n        switch (key) {\n            case 'OTEL_LOG_LEVEL':\n                setLogLevelFromEnv(key, environment, values);\n                break;\n            default:\n                if (isEnvVarANumber(key)) {\n                    parseNumber(key, environment, values);\n                }\n                else if (isEnvVarAList(key)) {\n                    parseStringList(key, environment, values);\n                }\n                else {\n                    const value = values[key];\n                    if (typeof value !== 'undefined' && value !== null) {\n                        environment[key] = String(value);\n                    }\n                }\n        }\n    }\n    return environment;\n}\nexports.parseEnvironment = parseEnvironment;\n//# sourceMappingURL=environment.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TracesSamplerValues = void 0;\nvar TracesSamplerValues;\n(function (TracesSamplerValues) {\n    TracesSamplerValues[\"AlwaysOff\"] = \"always_off\";\n    TracesSamplerValues[\"AlwaysOn\"] = \"always_on\";\n    TracesSamplerValues[\"ParentBasedAlwaysOff\"] = \"parentbased_always_off\";\n    TracesSamplerValues[\"ParentBasedAlwaysOn\"] = \"parentbased_always_on\";\n    TracesSamplerValues[\"ParentBasedTraceIdRatio\"] = \"parentbased_traceidratio\";\n    TracesSamplerValues[\"TraceIdRatio\"] = \"traceidratio\";\n})(TracesSamplerValues = exports.TracesSamplerValues || (exports.TracesSamplerValues = {}));\n//# sourceMappingURL=sampling.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isUrlIgnored = exports.urlMatches = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\nexports.urlMatches = urlMatches;\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nfunction isUrlIgnored(url, ignoredUrls) {\n    if (!ignoredUrls) {\n        return false;\n    }\n    for (const ignoreUrl of ignoredUrls) {\n        if (urlMatches(url, ignoreUrl)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isUrlIgnored = isUrlIgnored;\n//# sourceMappingURL=url.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapped = void 0;\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\nexports.isWrapped = isWrapped;\n//# sourceMappingURL=wrap.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.VERSION = '0.19.0';\n//# sourceMappingURL=version.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Resource = void 0;\nconst core_1 = require(\"@opentelemetry/core\");\nconst constants_1 = require(\"./constants\");\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nclass Resource {\n    constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes) {\n        this.attributes = attributes;\n    }\n    /**\n     * Returns an empty Resource\n     */\n    static empty() {\n        return Resource.EMPTY;\n    }\n    /**\n     * Returns a Resource that indentifies the SDK in use.\n     */\n    static createTelemetrySDKResource() {\n        return new Resource({\n            [constants_1.TELEMETRY_SDK_RESOURCE.LANGUAGE]: core_1.SDK_INFO.LANGUAGE,\n            [constants_1.TELEMETRY_SDK_RESOURCE.NAME]: core_1.SDK_INFO.NAME,\n            [constants_1.TELEMETRY_SDK_RESOURCE.VERSION]: core_1.SDK_INFO.VERSION,\n        });\n    }\n    /**\n     * Returns a new, merged {@link Resource} by merging the current Resource\n     * with the other Resource. In case of a collision, other Resource takes\n     * precedence.\n     *\n     * @param other the Resource that will be merged with this.\n     * @returns the newly merged Resource.\n     */\n    merge(other) {\n        if (!other || !Object.keys(other.attributes).length)\n            return this;\n        // SpanAttributes from resource overwrite attributes from other resource.\n        const mergedAttributes = Object.assign({}, this.attributes, other.attributes);\n        return new Resource(mergedAttributes);\n    }\n}\nexports.Resource = Resource;\nResource.EMPTY = new Resource({});\n//# sourceMappingURL=Resource.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROCESS_RESOURCE = exports.SERVICE_RESOURCE = exports.TELEMETRY_SDK_RESOURCE = exports.K8S_RESOURCE = exports.HOST_RESOURCE = exports.CONTAINER_RESOURCE = exports.CLOUD_RESOURCE = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexports.CLOUD_RESOURCE = {\n    /** Name of the cloud provider. Example values are aws, azure, gcp. */\n    PROVIDER: 'cloud.provider',\n    /** The cloud account id used to identify different entities. */\n    ACCOUNT_ID: 'cloud.account.id',\n    /** A specific geographical location where different entities can run. */\n    REGION: 'cloud.region',\n    /** Zones are a sub set of the region connected through low-latency links. */\n    ZONE: 'cloud.zone',\n};\n/**\n * SpanAttributes defining a compute unit (e.g. Container, Process, Lambda\n * Function).\n * */\nexports.CONTAINER_RESOURCE = {\n    /** The container name. */\n    NAME: 'container.name',\n    /** The container id. */\n    ID: 'container.id',\n    /** The name of the image the container was built on. */\n    IMAGE_NAME: 'container.image.name',\n    /** The container image tag. */\n    IMAGE_TAG: 'container.image.tag',\n};\n/** SpanAttributes defining a computing instance (e.g. host). */\nexports.HOST_RESOURCE = {\n    /**\n     * Unique host id. For Cloud this must be the instance_id assigned by the\n     * cloud provider\n     */\n    ID: 'host.id',\n    /**\n     * Name of the host. It may contain what hostname returns on Unix systems,\n     * the fully qualified, or a name specified by the user.\n     */\n    NAME: 'host.name',\n    /** Type of host. For Cloud this must be the machine type.*/\n    TYPE: 'host.type',\n    /** Name of the VM image or OS install the host was instantiated from. */\n    IMAGE_NAME: 'host.image.name',\n    /** VM image id. For Cloud, this value is from the provider. */\n    IMAGE_ID: 'host.image.id',\n    /** The version string of the VM image */\n    IMAGE_VERSION: 'host.image.version',\n};\n/** SpanAttributes defining a deployment service (e.g. Kubernetes). */\nexports.K8S_RESOURCE = {\n    /** The name of the cluster that the pod is running in. */\n    CLUSTER_NAME: 'k8s.cluster.name',\n    /** The name of the namespace that the pod is running in. */\n    NAMESPACE_NAME: 'k8s.namespace.name',\n    /** The name of the pod. */\n    POD_NAME: 'k8s.pod.name',\n    /** The name of the deployment. */\n    DEPLOYMENT_NAME: 'k8s.deployment.name',\n};\n/** SpanAttributes describing the telemetry library. */\nexports.TELEMETRY_SDK_RESOURCE = {\n    /** The name of the telemetry library. */\n    NAME: 'telemetry.sdk.name',\n    /** The language of telemetry library and of the code instrumented with it. */\n    LANGUAGE: 'telemetry.sdk.language',\n    /** The version string of the telemetry library */\n    VERSION: 'telemetry.sdk.version',\n};\n/** SpanAttributes describing a service instance. */\nexports.SERVICE_RESOURCE = {\n    /** Logical name of the service.  */\n    NAME: 'service.name',\n    /** A namespace for `service.name`. */\n    NAMESPACE: 'service.namespace',\n    /** The string ID of the service instance. */\n    INSTANCE_ID: 'service.instance.id',\n    /** The version string of the service API or implementation. */\n    VERSION: 'service.version',\n};\n/** SpanAttributes describing a Process. */\nexports.PROCESS_RESOURCE = {\n    /** A command which launced this proces.  */\n    COMMAND: 'process.command',\n    /** The full command with arguments as string.  */\n    COMMAND_LINE: 'process.command_line',\n    /** A name given to currently running porcess defaults to executable (process.title) .  */\n    NAME: 'process.executable.name',\n    /** An owner of currently running process.  */\n    OWNER: 'process.owner',\n    /** The full path to the process executable.  */\n    PATH: 'process.executable.path',\n    /** Process identifier of currently running process.  */\n    PID: 'process.id',\n};\n//# sourceMappingURL=constants.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Resource\"), exports);\n__exportStar(require(\"./platform\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./config\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectResources = void 0;\nconst Resource_1 = require(\"../../Resource\");\n/**\n * Detects resources for the browser platform, which is currently only the\n * telemetry SDK resource. More could be added in the future. This method\n * is async to match the signature of corresponding method for node.\n */\nconst detectResources = async () => {\n    return Resource_1.Resource.createTelemetrySDKResource();\n};\nexports.detectResources = detectResources;\n//# sourceMappingURL=detect-resources.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./detect-resources\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./trace\"), exports);\n__exportStar(require(\"./resource\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TelemetrySdkLanguageValues = exports.OsTypeValues = exports.HostArchValues = exports.AwsEcsLaunchtypeValues = exports.CloudPlatformValues = exports.CloudProviderValues = exports.ResourceAttributes = void 0;\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexports.ResourceAttributes = {\n    /**\n     * Name of the cloud provider.\n     */\n    CLOUD_PROVIDER: 'cloud.provider',\n    /**\n     * The cloud account ID the resource is assigned to.\n     */\n    CLOUD_ACCOUNT_ID: 'cloud.account.id',\n    /**\n     * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n     */\n    CLOUD_REGION: 'cloud.region',\n    /**\n     * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n     *\n     * Note: Availability zones are called &#34;zones&#34; on Google Cloud.\n     */\n    CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n    /**\n     * The cloud platform in use.\n     *\n     * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n     */\n    CLOUD_PLATFORM: 'cloud.platform',\n    /**\n     * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n     */\n    AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n    /**\n     * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n     */\n    AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n    /**\n     * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n     */\n    AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n    /**\n     * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n     */\n    AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n    /**\n     * The task definition family this task definition is a member of.\n     */\n    AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n    /**\n     * The revision for this task definition.\n     */\n    AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n    /**\n     * The ARN of an EKS cluster.\n     */\n    AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n    /**\n     * The name(s) of the AWS log group(s) an application is writing to.\n     *\n     * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n     */\n    AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n    /**\n     * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n     *\n     * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n     */\n    AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n    /**\n     * The name(s) of the AWS log stream(s) an application is writing to.\n     */\n    AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n    /**\n     * The ARN(s) of the AWS log stream(s).\n     *\n     * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n     */\n    AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n    /**\n     * Container name.\n     */\n    CONTAINER_NAME: 'container.name',\n    /**\n     * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n     */\n    CONTAINER_ID: 'container.id',\n    /**\n     * The container runtime managing this container.\n     */\n    CONTAINER_RUNTIME: 'container.runtime',\n    /**\n     * Name of the image the container was built on.\n     */\n    CONTAINER_IMAGE_NAME: 'container.image.name',\n    /**\n     * Container image tag.\n     */\n    CONTAINER_IMAGE_TAG: 'container.image.tag',\n    /**\n     * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n     */\n    DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n    /**\n     * The name of the function being executed.\n     */\n    FAAS_NAME: 'faas.name',\n    /**\n     * The unique ID of the function being executed.\n     *\n     * Note: For example, in AWS Lambda this field corresponds to the [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) value, in GCP to the URI of the resource, and in Azure to the [FunctionDirectory](https://github.com/Azure/azure-functions-host/wiki/Retrieving-information-about-the-currently-running-function) field.\n     */\n    FAAS_ID: 'faas.id',\n    /**\n     * The version string of the function being executed as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n     */\n    FAAS_VERSION: 'faas.version',\n    /**\n     * The execution environment ID as a string.\n     */\n    FAAS_INSTANCE: 'faas.instance',\n    /**\n     * The amount of memory available to the serverless function in MiB.\n     *\n     * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n     */\n    FAAS_MAX_MEMORY: 'faas.max_memory',\n    /**\n     * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n     */\n    HOST_ID: 'host.id',\n    /**\n     * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n     */\n    HOST_NAME: 'host.name',\n    /**\n     * Type of host. For Cloud, this must be the machine type.\n     */\n    HOST_TYPE: 'host.type',\n    /**\n     * The CPU architecture the host system is running on.\n     */\n    HOST_ARCH: 'host.arch',\n    /**\n     * Name of the VM image or OS install the host was instantiated from.\n     */\n    HOST_IMAGE_NAME: 'host.image.name',\n    /**\n     * VM image ID. For Cloud, this value is from the provider.\n     */\n    HOST_IMAGE_ID: 'host.image.id',\n    /**\n     * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n     */\n    HOST_IMAGE_VERSION: 'host.image.version',\n    /**\n     * The name of the cluster.\n     */\n    K8S_CLUSTER_NAME: 'k8s.cluster.name',\n    /**\n     * The name of the Node.\n     */\n    K8S_NODE_NAME: 'k8s.node.name',\n    /**\n     * The UID of the Node.\n     */\n    K8S_NODE_UID: 'k8s.node.uid',\n    /**\n     * The name of the namespace that the pod is running in.\n     */\n    K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n    /**\n     * The UID of the Pod.\n     */\n    K8S_POD_UID: 'k8s.pod.uid',\n    /**\n     * The name of the Pod.\n     */\n    K8S_POD_NAME: 'k8s.pod.name',\n    /**\n     * The name of the Container in a Pod template.\n     */\n    K8S_CONTAINER_NAME: 'k8s.container.name',\n    /**\n     * The UID of the ReplicaSet.\n     */\n    K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n    /**\n     * The name of the ReplicaSet.\n     */\n    K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n    /**\n     * The UID of the Deployment.\n     */\n    K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n    /**\n     * The name of the Deployment.\n     */\n    K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n    /**\n     * The UID of the StatefulSet.\n     */\n    K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n    /**\n     * The name of the StatefulSet.\n     */\n    K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n    /**\n     * The UID of the DaemonSet.\n     */\n    K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n    /**\n     * The name of the DaemonSet.\n     */\n    K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n    /**\n     * The UID of the Job.\n     */\n    K8S_JOB_UID: 'k8s.job.uid',\n    /**\n     * The name of the Job.\n     */\n    K8S_JOB_NAME: 'k8s.job.name',\n    /**\n     * The UID of the CronJob.\n     */\n    K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n    /**\n     * The name of the CronJob.\n     */\n    K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n    /**\n     * The operating system type.\n     */\n    OS_TYPE: 'os.type',\n    /**\n     * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n     */\n    OS_DESCRIPTION: 'os.description',\n    /**\n     * Process identifier (PID).\n     */\n    PROCESS_PID: 'process.pid',\n    /**\n     * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n    /**\n     * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n     */\n    PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n    /**\n     * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n     */\n    PROCESS_COMMAND: 'process.command',\n    /**\n     * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n     */\n    PROCESS_COMMAND_LINE: 'process.command_line',\n    /**\n     * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n     */\n    PROCESS_COMMAND_ARGS: 'process.command_args',\n    /**\n     * The username of the user that owns the process.\n     */\n    PROCESS_OWNER: 'process.owner',\n    /**\n     * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n     */\n    PROCESS_RUNTIME_NAME: 'process.runtime.name',\n    /**\n     * The version of the runtime of this process, as returned by the runtime without modification.\n     */\n    PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n    /**\n     * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n     */\n    PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n    /**\n     * Logical name of the service.\n     *\n     * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n     */\n    SERVICE_NAME: 'service.name',\n    /**\n     * A namespace for `service.name`.\n     *\n     * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n     */\n    SERVICE_NAMESPACE: 'service.namespace',\n    /**\n     * The string ID of the service instance.\n     *\n     * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n     */\n    SERVICE_INSTANCE_ID: 'service.instance.id',\n    /**\n     * The version string of the service API or implementation.\n     */\n    SERVICE_VERSION: 'service.version',\n    /**\n     * The name of the telemetry SDK as defined above.\n     */\n    TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n    /**\n     * The language of the telemetry SDK.\n     */\n    TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n    /**\n     * The version string of the telemetry SDK.\n     */\n    TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n    /**\n     * The version string of the auto instrumentation agent, if used.\n     */\n    TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n    /**\n     * The name of the web engine.\n     */\n    WEBENGINE_NAME: 'webengine.name',\n    /**\n     * The version of the web engine.\n     */\n    WEBENGINE_VERSION: 'webengine.version',\n    /**\n     * Additional description of the web engine (e.g. detailed version and edition information).\n     */\n    WEBENGINE_DESCRIPTION: 'webengine.description',\n};\n// Enum definitions\nvar CloudProviderValues;\n(function (CloudProviderValues) {\n    /** Amazon Web Services. */\n    CloudProviderValues[\"AWS\"] = \"aws\";\n    /** Microsoft Azure. */\n    CloudProviderValues[\"AZURE\"] = \"azure\";\n    /** Google Cloud Platform. */\n    CloudProviderValues[\"GCP\"] = \"gcp\";\n})(CloudProviderValues = exports.CloudProviderValues || (exports.CloudProviderValues = {}));\nvar CloudPlatformValues;\n(function (CloudPlatformValues) {\n    /** AWS Elastic Compute Cloud. */\n    CloudPlatformValues[\"AWS_EC2\"] = \"aws_ec2\";\n    /** AWS Elastic Container Service. */\n    CloudPlatformValues[\"AWS_ECS\"] = \"aws_ecs\";\n    /** AWS Elastic Kubernetes Service. */\n    CloudPlatformValues[\"AWS_EKS\"] = \"aws_eks\";\n    /** AWS Lambda. */\n    CloudPlatformValues[\"AWS_LAMBDA\"] = \"aws_lambda\";\n    /** AWS Elastic Beanstalk. */\n    CloudPlatformValues[\"AWS_ELASTICBEANSTALK\"] = \"aws_elastic_beanstalk\";\n    /** Azure Virtual Machines. */\n    CloudPlatformValues[\"AZURE_VM\"] = \"azure_vm\";\n    /** Azure Container Instances. */\n    CloudPlatformValues[\"AZURE_CONTAINERINSTANCES\"] = \"azure_container_instances\";\n    /** Azure Kubernetes Service. */\n    CloudPlatformValues[\"AZURE_AKS\"] = \"azure_aks\";\n    /** Azure Functions. */\n    CloudPlatformValues[\"AZURE_FUNCTIONS\"] = \"azure_functions\";\n    /** Azure App Service. */\n    CloudPlatformValues[\"AZURE_APPSERVICE\"] = \"azure_app_service\";\n    /** Google Cloud Compute Engine (GCE). */\n    CloudPlatformValues[\"GCP_COMPUTEENGINE\"] = \"gcp_compute_engine\";\n    /** Google Cloud Run. */\n    CloudPlatformValues[\"GCP_CLOUDRUN\"] = \"gcp_cloud_run\";\n    /** Google Cloud Kubernetes Engine (GKE). */\n    CloudPlatformValues[\"GCP_KUBERNETESENGINE\"] = \"gcp_kubernetes_engine\";\n    /** Google Cloud Functions (GCF). */\n    CloudPlatformValues[\"GCP_CLOUDFUNCTIONS\"] = \"gcp_cloud_functions\";\n    /** Google Cloud App Engine (GAE). */\n    CloudPlatformValues[\"GCP_APPENGINE\"] = \"gcp_app_engine\";\n})(CloudPlatformValues = exports.CloudPlatformValues || (exports.CloudPlatformValues = {}));\nvar AwsEcsLaunchtypeValues;\n(function (AwsEcsLaunchtypeValues) {\n    /** ec2. */\n    AwsEcsLaunchtypeValues[\"EC2\"] = \"ec2\";\n    /** fargate. */\n    AwsEcsLaunchtypeValues[\"FARGATE\"] = \"fargate\";\n})(AwsEcsLaunchtypeValues = exports.AwsEcsLaunchtypeValues || (exports.AwsEcsLaunchtypeValues = {}));\nvar HostArchValues;\n(function (HostArchValues) {\n    /** AMD64. */\n    HostArchValues[\"AMD64\"] = \"amd64\";\n    /** ARM32. */\n    HostArchValues[\"ARM32\"] = \"arm32\";\n    /** ARM64. */\n    HostArchValues[\"ARM64\"] = \"arm64\";\n    /** Itanium. */\n    HostArchValues[\"IA64\"] = \"ia64\";\n    /** 32-bit PowerPC. */\n    HostArchValues[\"PPC32\"] = \"ppc32\";\n    /** 64-bit PowerPC. */\n    HostArchValues[\"PPC64\"] = \"ppc64\";\n    /** 32-bit x86. */\n    HostArchValues[\"X86\"] = \"x86\";\n})(HostArchValues = exports.HostArchValues || (exports.HostArchValues = {}));\nvar OsTypeValues;\n(function (OsTypeValues) {\n    /** Microsoft Windows. */\n    OsTypeValues[\"WINDOWS\"] = \"WINDOWS\";\n    /** Linux. */\n    OsTypeValues[\"LINUX\"] = \"LINUX\";\n    /** Apple Darwin. */\n    OsTypeValues[\"DARWIN\"] = \"DARWIN\";\n    /** FreeBSD. */\n    OsTypeValues[\"FREEBSD\"] = \"FREEBSD\";\n    /** NetBSD. */\n    OsTypeValues[\"NETBSD\"] = \"NETBSD\";\n    /** OpenBSD. */\n    OsTypeValues[\"OPENBSD\"] = \"OPENBSD\";\n    /** DragonFly BSD. */\n    OsTypeValues[\"DRAGONFLYBSD\"] = \"DRAGONFLYBSD\";\n    /** HP-UX (Hewlett Packard Unix). */\n    OsTypeValues[\"HPUX\"] = \"HPUX\";\n    /** AIX (Advanced Interactive eXecutive). */\n    OsTypeValues[\"AIX\"] = \"AIX\";\n    /** Oracle Solaris. */\n    OsTypeValues[\"SOLARIS\"] = \"SOLARIS\";\n    /** IBM z/OS. */\n    OsTypeValues[\"ZOS\"] = \"ZOS\";\n})(OsTypeValues = exports.OsTypeValues || (exports.OsTypeValues = {}));\nvar TelemetrySdkLanguageValues;\n(function (TelemetrySdkLanguageValues) {\n    /** cpp. */\n    TelemetrySdkLanguageValues[\"CPP\"] = \"cpp\";\n    /** dotnet. */\n    TelemetrySdkLanguageValues[\"DOTNET\"] = \"dotnet\";\n    /** erlang. */\n    TelemetrySdkLanguageValues[\"ERLANG\"] = \"erlang\";\n    /** go. */\n    TelemetrySdkLanguageValues[\"GO\"] = \"go\";\n    /** java. */\n    TelemetrySdkLanguageValues[\"JAVA\"] = \"java\";\n    /** nodejs. */\n    TelemetrySdkLanguageValues[\"NODEJS\"] = \"nodejs\";\n    /** php. */\n    TelemetrySdkLanguageValues[\"PHP\"] = \"php\";\n    /** python. */\n    TelemetrySdkLanguageValues[\"PYTHON\"] = \"python\";\n    /** ruby. */\n    TelemetrySdkLanguageValues[\"RUBY\"] = \"ruby\";\n    /** webjs. */\n    TelemetrySdkLanguageValues[\"WEBJS\"] = \"webjs\";\n})(TelemetrySdkLanguageValues = exports.TelemetrySdkLanguageValues || (exports.TelemetrySdkLanguageValues = {}));\n//# sourceMappingURL=ResourceAttributes.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n__exportStar(require(\"./ResourceAttributes\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcGrpcStatusCodeValues = exports.MessagingOperationValues = exports.MessagingDestinationKindValues = exports.HttpFlavorValues = exports.NetTransportValues = exports.FaasInvokedProviderValues = exports.FaasDocumentOperationValues = exports.FaasTriggerValues = exports.DbCassandraConsistencyLevelValues = exports.DbSystemValues = exports.SemanticAttributes = void 0;\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexports.SemanticAttributes = {\n    /**\n     * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n     */\n    DB_SYSTEM: 'db.system',\n    /**\n     * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n     */\n    DB_CONNECTION_STRING: 'db.connection_string',\n    /**\n     * Username for accessing the database.\n     */\n    DB_USER: 'db.user',\n    /**\n     * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n     */\n    DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n    /**\n     * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n     *\n     * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n     */\n    DB_NAME: 'db.name',\n    /**\n     * The database statement being executed.\n     *\n     * Note: The value may be sanitized to exclude sensitive information.\n     */\n    DB_STATEMENT: 'db.statement',\n    /**\n     * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n     *\n     * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n     */\n    DB_OPERATION: 'db.operation',\n    /**\n     * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n     *\n     * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n     */\n    DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n    /**\n     * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n    /**\n     * The fetch size used for paging, i.e. how many rows will be returned at once.\n     */\n    DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n    /**\n     * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n     */\n    DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_CASSANDRA_TABLE: 'db.cassandra.table',\n    /**\n     * Whether or not the query is idempotent.\n     */\n    DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n    /**\n     * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n     */\n    DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n    /**\n     * The ID of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n    /**\n     * The data center of the coordinating node for a query.\n     */\n    DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n    /**\n     * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n     */\n    DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n    /**\n     * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n     */\n    DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n    /**\n     * The collection being accessed within the database stated in `db.name`.\n     */\n    DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n    /**\n     * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n     *\n     * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n     */\n    DB_SQL_TABLE: 'db.sql.table',\n    /**\n     * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n     */\n    EXCEPTION_TYPE: 'exception.type',\n    /**\n     * The exception message.\n     */\n    EXCEPTION_MESSAGE: 'exception.message',\n    /**\n     * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n     */\n    EXCEPTION_STACKTRACE: 'exception.stacktrace',\n    /**\n    * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n    *\n    * Note: An exception is considered to have escaped (or left) the scope of a span,\n  if that span is ended while the exception is still logically &#34;in flight&#34;.\n  This may be actually &#34;in flight&#34; in some languages (e.g. if the exception\n  is passed to a Context manager&#39;s `__exit__` method in Python) but will\n  usually be caught at the point of recording the exception in most languages.\n  \n  It is usually not possible to determine at the point where an exception is thrown\n  whether it will escape the scope of a span.\n  However, it is trivial to know that an exception\n  will escape, if one checks for an active exception just before ending the span,\n  as done in the [example above](#exception-end-example).\n  \n  It follows that an exception may still escape the scope of the span\n  even if the `exception.escaped` attribute was not set or set to false,\n  since the event might have been recorded at a time where it was not\n  clear whether the exception will escape.\n    */\n    EXCEPTION_ESCAPED: 'exception.escaped',\n    /**\n     * Type of the trigger on which the function is executed.\n     */\n    FAAS_TRIGGER: 'faas.trigger',\n    /**\n     * The execution ID of the current function execution.\n     */\n    FAAS_EXECUTION: 'faas.execution',\n    /**\n     * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n     */\n    FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n    /**\n     * Describes the type of the operation that was performed on the data.\n     */\n    FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n    /**\n     * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_DOCUMENT_TIME: 'faas.document.time',\n    /**\n     * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n     */\n    FAAS_DOCUMENT_NAME: 'faas.document.name',\n    /**\n     * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n     */\n    FAAS_TIME: 'faas.time',\n    /**\n     * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n     */\n    FAAS_CRON: 'faas.cron',\n    /**\n     * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n     */\n    FAAS_COLDSTART: 'faas.coldstart',\n    /**\n     * The name of the invoked function.\n     *\n     * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_NAME: 'faas.invoked_name',\n    /**\n     * The cloud provider of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n    /**\n     * The cloud region of the invoked function.\n     *\n     * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n     */\n    FAAS_INVOKED_REGION: 'faas.invoked_region',\n    /**\n     * Transport protocol used. See note below.\n     */\n    NET_TRANSPORT: 'net.transport',\n    /**\n     * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n     */\n    NET_PEER_IP: 'net.peer.ip',\n    /**\n     * Remote port number.\n     */\n    NET_PEER_PORT: 'net.peer.port',\n    /**\n     * Remote hostname or similar, see note below.\n     */\n    NET_PEER_NAME: 'net.peer.name',\n    /**\n     * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n     */\n    NET_HOST_IP: 'net.host.ip',\n    /**\n     * Like `net.peer.port` but for the host port.\n     */\n    NET_HOST_PORT: 'net.host.port',\n    /**\n     * Local hostname or similar, see note below.\n     */\n    NET_HOST_NAME: 'net.host.name',\n    /**\n     * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n     */\n    PEER_SERVICE: 'peer.service',\n    /**\n     * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n     */\n    ENDUSER_ID: 'enduser.id',\n    /**\n     * Actual/assumed role the client is making the request under extracted from token or application security context.\n     */\n    ENDUSER_ROLE: 'enduser.role',\n    /**\n     * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n     */\n    ENDUSER_SCOPE: 'enduser.scope',\n    /**\n     * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n     */\n    THREAD_ID: 'thread.id',\n    /**\n     * Current thread name.\n     */\n    THREAD_NAME: 'thread.name',\n    /**\n     * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n     */\n    CODE_FUNCTION: 'code.function',\n    /**\n     * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n     */\n    CODE_NAMESPACE: 'code.namespace',\n    /**\n     * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n     */\n    CODE_FILEPATH: 'code.filepath',\n    /**\n     * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n     */\n    CODE_LINENO: 'code.lineno',\n    /**\n     * HTTP request method.\n     */\n    HTTP_METHOD: 'http.method',\n    /**\n     * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n     *\n     * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n     */\n    HTTP_URL: 'http.url',\n    /**\n     * The full request target as passed in a HTTP request line or equivalent.\n     */\n    HTTP_TARGET: 'http.target',\n    /**\n     * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is empty or not present, this attribute should be the same.\n     */\n    HTTP_HOST: 'http.host',\n    /**\n     * The URI scheme identifying the used protocol.\n     */\n    HTTP_SCHEME: 'http.scheme',\n    /**\n     * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n     */\n    HTTP_STATUS_CODE: 'http.status_code',\n    /**\n     * Kind of HTTP protocol used.\n     *\n     * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n     */\n    HTTP_FLAVOR: 'http.flavor',\n    /**\n     * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n     */\n    HTTP_USER_AGENT: 'http.user_agent',\n    /**\n     * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n    /**\n     * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n    /**\n     * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n    /**\n     * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n     */\n    HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n    /**\n     * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n     *\n     * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n     */\n    HTTP_SERVER_NAME: 'http.server_name',\n    /**\n     * The matched route (path template).\n     */\n    HTTP_ROUTE: 'http.route',\n    /**\n     * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n     *\n     * Note: This is not necessarily the same as `net.peer.ip`, which would identify the network-level peer, which may be a proxy.\n     */\n    HTTP_CLIENT_IP: 'http.client_ip',\n    /**\n     * The keys in the `RequestItems` object field.\n     */\n    AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n    /**\n     * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n     */\n    AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n    /**\n     * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n     */\n    AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n    /**\n     * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n    /**\n     * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n     */\n    AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n    /**\n     * The value of the `ConsistentRead` request parameter.\n     */\n    AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n    /**\n     * The value of the `ProjectionExpression` request parameter.\n     */\n    AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n    /**\n     * The value of the `Limit` request parameter.\n     */\n    AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n    /**\n     * The value of the `AttributesToGet` request parameter.\n     */\n    AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n    /**\n     * The value of the `IndexName` request parameter.\n     */\n    AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n    /**\n     * The value of the `Select` request parameter.\n     */\n    AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n    /**\n     * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n    /**\n     * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n     */\n    AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n    /**\n     * The value of the `ExclusiveStartTableName` request parameter.\n     */\n    AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n    /**\n     * The the number of items in the `TableNames` response parameter.\n     */\n    AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n    /**\n     * The value of the `ScanIndexForward` request parameter.\n     */\n    AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n    /**\n     * The value of the `Segment` request parameter.\n     */\n    AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n    /**\n     * The value of the `TotalSegments` request parameter.\n     */\n    AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n    /**\n     * The value of the `Count` response parameter.\n     */\n    AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n    /**\n     * The value of the `ScannedCount` response parameter.\n     */\n    AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n    /**\n     * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n     */\n    AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n    /**\n     * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n     */\n    AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n    /**\n     * A string identifying the messaging system.\n     */\n    MESSAGING_SYSTEM: 'messaging.system',\n    /**\n     * The message destination name. This might be equal to the span name but is required nevertheless.\n     */\n    MESSAGING_DESTINATION: 'messaging.destination',\n    /**\n     * The kind of message destination.\n     */\n    MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n    /**\n     * A boolean that is true if the message destination is temporary.\n     */\n    MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n    /**\n     * The name of the transport protocol.\n     */\n    MESSAGING_PROTOCOL: 'messaging.protocol',\n    /**\n     * The version of the transport protocol.\n     */\n    MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n    /**\n     * Connection string.\n     */\n    MESSAGING_URL: 'messaging.url',\n    /**\n     * A value used by the messaging system as an identifier for the message, represented as a string.\n     */\n    MESSAGING_MESSAGE_ID: 'messaging.message_id',\n    /**\n     * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n     */\n    MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n    /**\n     * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n    /**\n     * The compressed size of the message payload in bytes.\n     */\n    MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n    /**\n     * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n     */\n    MESSAGING_OPERATION: 'messaging.operation',\n    /**\n     * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n     *\n     * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n     */\n    MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n    /**\n     * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n     */\n    MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n    /**\n     * Client Id for the Consumer or Producer that is handling the message.\n     */\n    MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n    /**\n     * Partition the message is sent to.\n     */\n    MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n    /**\n     * A boolean that is true if the message is a tombstone.\n     */\n    MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n    /**\n     * A string identifying the remoting system.\n     */\n    RPC_SYSTEM: 'rpc.system',\n    /**\n     * The full name of the service being called, including its package name, if applicable.\n     */\n    RPC_SERVICE: 'rpc.service',\n    /**\n     * The name of the method being called, must be equal to the $method part in the span name.\n     */\n    RPC_METHOD: 'rpc.method',\n    /**\n     * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n     */\n    RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n};\n// Enum definitions\nvar DbSystemValues;\n(function (DbSystemValues) {\n    /** Some other SQL database. Fallback only. See notes. */\n    DbSystemValues[\"OTHER_SQL\"] = \"other_sql\";\n    /** Microsoft SQL Server. */\n    DbSystemValues[\"MSSQL\"] = \"mssql\";\n    /** MySQL. */\n    DbSystemValues[\"MYSQL\"] = \"mysql\";\n    /** Oracle Database. */\n    DbSystemValues[\"ORACLE\"] = \"oracle\";\n    /** IBM Db2. */\n    DbSystemValues[\"DB2\"] = \"db2\";\n    /** PostgreSQL. */\n    DbSystemValues[\"POSTGRESQL\"] = \"postgresql\";\n    /** Amazon Redshift. */\n    DbSystemValues[\"REDSHIFT\"] = \"redshift\";\n    /** Apache Hive. */\n    DbSystemValues[\"HIVE\"] = \"hive\";\n    /** Cloudscape. */\n    DbSystemValues[\"CLOUDSCAPE\"] = \"cloudscape\";\n    /** HyperSQL DataBase. */\n    DbSystemValues[\"HSQLDB\"] = \"hsqldb\";\n    /** Progress Database. */\n    DbSystemValues[\"PROGRESS\"] = \"progress\";\n    /** SAP MaxDB. */\n    DbSystemValues[\"MAXDB\"] = \"maxdb\";\n    /** SAP HANA. */\n    DbSystemValues[\"HANADB\"] = \"hanadb\";\n    /** Ingres. */\n    DbSystemValues[\"INGRES\"] = \"ingres\";\n    /** FirstSQL. */\n    DbSystemValues[\"FIRSTSQL\"] = \"firstsql\";\n    /** EnterpriseDB. */\n    DbSystemValues[\"EDB\"] = \"edb\";\n    /** InterSystems Caché. */\n    DbSystemValues[\"CACHE\"] = \"cache\";\n    /** Adabas (Adaptable Database System). */\n    DbSystemValues[\"ADABAS\"] = \"adabas\";\n    /** Firebird. */\n    DbSystemValues[\"FIREBIRD\"] = \"firebird\";\n    /** Apache Derby. */\n    DbSystemValues[\"DERBY\"] = \"derby\";\n    /** FileMaker. */\n    DbSystemValues[\"FILEMAKER\"] = \"filemaker\";\n    /** Informix. */\n    DbSystemValues[\"INFORMIX\"] = \"informix\";\n    /** InstantDB. */\n    DbSystemValues[\"INSTANTDB\"] = \"instantdb\";\n    /** InterBase. */\n    DbSystemValues[\"INTERBASE\"] = \"interbase\";\n    /** MariaDB. */\n    DbSystemValues[\"MARIADB\"] = \"mariadb\";\n    /** Netezza. */\n    DbSystemValues[\"NETEZZA\"] = \"netezza\";\n    /** Pervasive PSQL. */\n    DbSystemValues[\"PERVASIVE\"] = \"pervasive\";\n    /** PointBase. */\n    DbSystemValues[\"POINTBASE\"] = \"pointbase\";\n    /** SQLite. */\n    DbSystemValues[\"SQLITE\"] = \"sqlite\";\n    /** Sybase. */\n    DbSystemValues[\"SYBASE\"] = \"sybase\";\n    /** Teradata. */\n    DbSystemValues[\"TERADATA\"] = \"teradata\";\n    /** Vertica. */\n    DbSystemValues[\"VERTICA\"] = \"vertica\";\n    /** H2. */\n    DbSystemValues[\"H2\"] = \"h2\";\n    /** ColdFusion IMQ. */\n    DbSystemValues[\"COLDFUSION\"] = \"coldfusion\";\n    /** Apache Cassandra. */\n    DbSystemValues[\"CASSANDRA\"] = \"cassandra\";\n    /** Apache HBase. */\n    DbSystemValues[\"HBASE\"] = \"hbase\";\n    /** MongoDB. */\n    DbSystemValues[\"MONGODB\"] = \"mongodb\";\n    /** Redis. */\n    DbSystemValues[\"REDIS\"] = \"redis\";\n    /** Couchbase. */\n    DbSystemValues[\"COUCHBASE\"] = \"couchbase\";\n    /** CouchDB. */\n    DbSystemValues[\"COUCHDB\"] = \"couchdb\";\n    /** Microsoft Azure Cosmos DB. */\n    DbSystemValues[\"COSMOSDB\"] = \"cosmosdb\";\n    /** Amazon DynamoDB. */\n    DbSystemValues[\"DYNAMODB\"] = \"dynamodb\";\n    /** Neo4j. */\n    DbSystemValues[\"NEO4J\"] = \"neo4j\";\n    /** Apache Geode. */\n    DbSystemValues[\"GEODE\"] = \"geode\";\n    /** Elasticsearch. */\n    DbSystemValues[\"ELASTICSEARCH\"] = \"elasticsearch\";\n})(DbSystemValues = exports.DbSystemValues || (exports.DbSystemValues = {}));\nvar DbCassandraConsistencyLevelValues;\n(function (DbCassandraConsistencyLevelValues) {\n    /** ALL. */\n    DbCassandraConsistencyLevelValues[\"ALL\"] = \"ALL\";\n    /** EACH_QUORUM. */\n    DbCassandraConsistencyLevelValues[\"EACH_QUORUM\"] = \"EACH_QUORUM\";\n    /** QUORUM. */\n    DbCassandraConsistencyLevelValues[\"QUORUM\"] = \"QUORUM\";\n    /** LOCAL_QUORUM. */\n    DbCassandraConsistencyLevelValues[\"LOCAL_QUORUM\"] = \"LOCAL_QUORUM\";\n    /** ONE. */\n    DbCassandraConsistencyLevelValues[\"ONE\"] = \"ONE\";\n    /** TWO. */\n    DbCassandraConsistencyLevelValues[\"TWO\"] = \"TWO\";\n    /** THREE. */\n    DbCassandraConsistencyLevelValues[\"THREE\"] = \"THREE\";\n    /** LOCAL_ONE. */\n    DbCassandraConsistencyLevelValues[\"LOCAL_ONE\"] = \"LOCAL_ONE\";\n    /** ANY. */\n    DbCassandraConsistencyLevelValues[\"ANY\"] = \"ANY\";\n    /** SERIAL. */\n    DbCassandraConsistencyLevelValues[\"SERIAL\"] = \"SERIAL\";\n    /** LOCAL_SERIAL. */\n    DbCassandraConsistencyLevelValues[\"LOCAL_SERIAL\"] = \"LOCAL_SERIAL\";\n})(DbCassandraConsistencyLevelValues = exports.DbCassandraConsistencyLevelValues || (exports.DbCassandraConsistencyLevelValues = {}));\nvar FaasTriggerValues;\n(function (FaasTriggerValues) {\n    /** A response to some data source operation such as a database or filesystem read/write. */\n    FaasTriggerValues[\"DATASOURCE\"] = \"datasource\";\n    /** To provide an answer to an inbound HTTP request. */\n    FaasTriggerValues[\"HTTP\"] = \"http\";\n    /** A function is set to be executed when messages are sent to a messaging system. */\n    FaasTriggerValues[\"PUBSUB\"] = \"pubsub\";\n    /** A function is scheduled to be executed regularly. */\n    FaasTriggerValues[\"TIMER\"] = \"timer\";\n    /** If none of the others apply. */\n    FaasTriggerValues[\"OTHER\"] = \"other\";\n})(FaasTriggerValues = exports.FaasTriggerValues || (exports.FaasTriggerValues = {}));\nvar FaasDocumentOperationValues;\n(function (FaasDocumentOperationValues) {\n    /** When a new object is created. */\n    FaasDocumentOperationValues[\"INSERT\"] = \"insert\";\n    /** When an object is modified. */\n    FaasDocumentOperationValues[\"EDIT\"] = \"edit\";\n    /** When an object is deleted. */\n    FaasDocumentOperationValues[\"DELETE\"] = \"delete\";\n})(FaasDocumentOperationValues = exports.FaasDocumentOperationValues || (exports.FaasDocumentOperationValues = {}));\nvar FaasInvokedProviderValues;\n(function (FaasInvokedProviderValues) {\n    /** Amazon Web Services. */\n    FaasInvokedProviderValues[\"AWS\"] = \"aws\";\n    /** Microsoft Azure. */\n    FaasInvokedProviderValues[\"AZURE\"] = \"azure\";\n    /** Google Cloud Platform. */\n    FaasInvokedProviderValues[\"GCP\"] = \"gcp\";\n})(FaasInvokedProviderValues = exports.FaasInvokedProviderValues || (exports.FaasInvokedProviderValues = {}));\nvar NetTransportValues;\n(function (NetTransportValues) {\n    /** IP.TCP. */\n    NetTransportValues[\"IP_TCP\"] = \"IP.TCP\";\n    /** IP.UDP. */\n    NetTransportValues[\"IP_UDP\"] = \"IP.UDP\";\n    /** Another IP-based protocol. */\n    NetTransportValues[\"IP\"] = \"IP\";\n    /** Unix Domain socket. See below. */\n    NetTransportValues[\"UNIX\"] = \"Unix\";\n    /** Named or anonymous pipe. See note below. */\n    NetTransportValues[\"PIPE\"] = \"pipe\";\n    /** In-process communication. */\n    NetTransportValues[\"INPROC\"] = \"inproc\";\n    /** Something else (non IP-based). */\n    NetTransportValues[\"OTHER\"] = \"other\";\n})(NetTransportValues = exports.NetTransportValues || (exports.NetTransportValues = {}));\nvar HttpFlavorValues;\n(function (HttpFlavorValues) {\n    /** HTTP 1.0. */\n    HttpFlavorValues[\"HTTP_1_0\"] = \"1.0\";\n    /** HTTP 1.1. */\n    HttpFlavorValues[\"HTTP_1_1\"] = \"1.1\";\n    /** HTTP 2. */\n    HttpFlavorValues[\"HTTP_2_0\"] = \"2.0\";\n    /** SPDY protocol. */\n    HttpFlavorValues[\"SPDY\"] = \"SPDY\";\n    /** QUIC protocol. */\n    HttpFlavorValues[\"QUIC\"] = \"QUIC\";\n})(HttpFlavorValues = exports.HttpFlavorValues || (exports.HttpFlavorValues = {}));\nvar MessagingDestinationKindValues;\n(function (MessagingDestinationKindValues) {\n    /** A message sent to a queue. */\n    MessagingDestinationKindValues[\"QUEUE\"] = \"queue\";\n    /** A message sent to a topic. */\n    MessagingDestinationKindValues[\"TOPIC\"] = \"topic\";\n})(MessagingDestinationKindValues = exports.MessagingDestinationKindValues || (exports.MessagingDestinationKindValues = {}));\nvar MessagingOperationValues;\n(function (MessagingOperationValues) {\n    /** receive. */\n    MessagingOperationValues[\"RECEIVE\"] = \"receive\";\n    /** process. */\n    MessagingOperationValues[\"PROCESS\"] = \"process\";\n})(MessagingOperationValues = exports.MessagingOperationValues || (exports.MessagingOperationValues = {}));\nvar RpcGrpcStatusCodeValues;\n(function (RpcGrpcStatusCodeValues) {\n    /** OK. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"OK\"] = 0] = \"OK\";\n    /** CANCELLED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /** UNKNOWN. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /** INVALID_ARGUMENT. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /** DEADLINE_EXCEEDED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /** NOT_FOUND. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /** ALREADY_EXISTS. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /** PERMISSION_DENIED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /** RESOURCE_EXHAUSTED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /** FAILED_PRECONDITION. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /** ABORTED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"ABORTED\"] = 10] = \"ABORTED\";\n    /** OUT_OF_RANGE. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /** UNIMPLEMENTED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /** INTERNAL. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /** UNAVAILABLE. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /** DATA_LOSS. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    /** UNAUTHENTICATED. */\n    RpcGrpcStatusCodeValues[RpcGrpcStatusCodeValues[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(RpcGrpcStatusCodeValues = exports.RpcGrpcStatusCodeValues || (exports.RpcGrpcStatusCodeValues = {}));\n//# sourceMappingURL=SemanticAttributes.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n__exportStar(require(\"./SemanticAttributes\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicTracerProvider = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst resources_1 = require(\"@opentelemetry/resources\");\nconst _1 = require(\".\");\nconst config_1 = require(\"./config\");\nconst MultiSpanProcessor_1 = require(\"./MultiSpanProcessor\");\nconst NoopSpanProcessor_1 = require(\"./NoopSpanProcessor\");\nconst merge = require(\"lodash.merge\");\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nclass BasicTracerProvider {\n    constructor(config = {}) {\n        var _a;\n        this._registeredSpanProcessors = [];\n        this._tracers = new Map();\n        this.activeSpanProcessor = new NoopSpanProcessor_1.NoopSpanProcessor();\n        const mergedConfig = merge({}, config_1.DEFAULT_CONFIG, config);\n        this.resource =\n            (_a = mergedConfig.resource) !== null && _a !== void 0 ? _a : resources_1.Resource.createTelemetrySDKResource();\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this.resource,\n        });\n    }\n    getTracer(name, version) {\n        const key = `${name}@${version || ''}`;\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new _1.Tracer({ name, version }, this._config, this));\n        }\n        return this._tracers.get(key);\n    }\n    /**\n     * Adds a new {@link SpanProcessor} to this tracer.\n     * @param spanProcessor the new SpanProcessor to be added.\n     */\n    addSpanProcessor(spanProcessor) {\n        this._registeredSpanProcessors.push(spanProcessor);\n        this.activeSpanProcessor = new MultiSpanProcessor_1.MultiSpanProcessor(this._registeredSpanProcessors);\n    }\n    getActiveSpanProcessor() {\n        return this.activeSpanProcessor;\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    register(config = {}) {\n        api_1.trace.setGlobalTracerProvider(this);\n        if (config.propagator === undefined) {\n            config.propagator = this._buildPropagatorFromEnv();\n        }\n        if (config.contextManager) {\n            api_1.context.setGlobalContextManager(config.contextManager);\n        }\n        if (config.propagator) {\n            api_1.propagation.setGlobalPropagator(config.propagator);\n        }\n    }\n    shutdown() {\n        return this.activeSpanProcessor.shutdown();\n    }\n    _getPropagator(name) {\n        var _a;\n        return (_a = BasicTracerProvider._registeredPropagators.get(name)) === null || _a === void 0 ? void 0 : _a();\n    }\n    _buildPropagatorFromEnv() {\n        // per spec, propagators from env must be deduplicated\n        const uniquePropagatorNames = [...new Set(core_1.getEnv().OTEL_PROPAGATORS)];\n        const propagators = uniquePropagatorNames.map(name => {\n            const propagator = this._getPropagator(name);\n            if (!propagator) {\n                api_1.diag.warn(`Propagator \"${name}\" requested through environment variable is unavailable.`);\n            }\n            return propagator;\n        });\n        const validPropagators = propagators.reduce((list, item) => {\n            if (item) {\n                list.push(item);\n            }\n            return list;\n        }, []);\n        if (validPropagators.length === 0) {\n            return;\n        }\n        else if (uniquePropagatorNames.length === 1) {\n            return validPropagators[0];\n        }\n        else {\n            return new core_1.CompositePropagator({\n                propagators: validPropagators,\n            });\n        }\n    }\n}\nexports.BasicTracerProvider = BasicTracerProvider;\nBasicTracerProvider._registeredPropagators = new Map([\n    ['tracecontext', () => new core_1.HttpTraceContext()],\n    ['baggage', () => new core_1.HttpBaggage()],\n]);\n//# sourceMappingURL=BasicTracerProvider.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MultiSpanProcessor = void 0;\nconst core_1 = require(\"@opentelemetry/core\");\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nclass MultiSpanProcessor {\n    constructor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    forceFlush() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.forceFlush());\n        }\n        return new Promise(resolve => {\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(error => {\n                core_1.globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    }\n    onStart(span, context) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onStart(span, context);\n        }\n    }\n    onEnd(span) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onEnd(span);\n        }\n    }\n    shutdown() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.shutdown());\n        }\n        return new Promise((resolve, reject) => {\n            Promise.all(promises).then(() => {\n                resolve();\n            }, reject);\n        });\n    }\n}\nexports.MultiSpanProcessor = MultiSpanProcessor;\n//# sourceMappingURL=MultiSpanProcessor.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopSpanProcessor = void 0;\n/** No-op implementation of SpanProcessor */\nclass NoopSpanProcessor {\n    onStart(_span, _context) { }\n    onEnd(_span) { }\n    shutdown() {\n        return Promise.resolve();\n    }\n    forceFlush() {\n        return Promise.resolve();\n    }\n}\nexports.NoopSpanProcessor = NoopSpanProcessor;\n//# sourceMappingURL=NoopSpanProcessor.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Span = void 0;\nconst api = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst semantic_conventions_1 = require(\"@opentelemetry/semantic-conventions\");\nconst enums_1 = require(\"./enums\");\n/**\n * This class represents a span.\n */\nclass Span {\n    /** Constructs a new Span instance. */\n    constructor(parentTracer, context, spanName, spanContext, kind, parentSpanId, links = [], startTime = core_1.hrTime()) {\n        this.attributes = {};\n        this.links = [];\n        this.events = [];\n        this.status = {\n            code: api.SpanStatusCode.UNSET,\n        };\n        this.endTime = [0, 0];\n        this._ended = false;\n        this._duration = [-1, -1];\n        this.name = spanName;\n        this.spanContext = spanContext;\n        this.parentSpanId = parentSpanId;\n        this.kind = kind;\n        this.links = links;\n        this.startTime = core_1.timeInputToHrTime(startTime);\n        this.resource = parentTracer.resource;\n        this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n        this._traceParams = parentTracer.getActiveTraceParams();\n        this._spanProcessor = parentTracer.getActiveSpanProcessor();\n        this._spanProcessor.onStart(this, context);\n    }\n    context() {\n        return this.spanContext;\n    }\n    setAttribute(key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            api.diag.warn(`Invalid attribute key: ${key}`);\n            return this;\n        }\n        if (!core_1.isAttributeValue(value)) {\n            api.diag.warn(`Invalid attribute value set for key: ${key}`);\n            return this;\n        }\n        if (Object.keys(this.attributes).length >=\n            this._traceParams.numberOfAttributesPerSpan &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            return this;\n        }\n        this.attributes[key] = value;\n        return this;\n    }\n    setAttributes(attributes) {\n        for (const [k, v] of Object.entries(attributes)) {\n            this.setAttribute(k, v);\n        }\n        return this;\n    }\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [startTime] Specified start time for the event\n     */\n    addEvent(name, attributesOrStartTime, startTime) {\n        if (this._isSpanEnded())\n            return this;\n        if (this.events.length >= this._traceParams.numberOfEventsPerSpan) {\n            api.diag.warn('Dropping extra events.');\n            this.events.shift();\n        }\n        if (core_1.isTimeInput(attributesOrStartTime)) {\n            if (typeof startTime === 'undefined') {\n                startTime = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        if (typeof startTime === 'undefined') {\n            startTime = core_1.hrTime();\n        }\n        this.events.push({\n            name,\n            attributes: attributesOrStartTime,\n            time: core_1.timeInputToHrTime(startTime),\n        });\n        return this;\n    }\n    setStatus(status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = status;\n        return this;\n    }\n    updateName(name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    }\n    end(endTime = core_1.hrTime()) {\n        if (this._isSpanEnded()) {\n            api.diag.error('You can only call end() on a span once.');\n            return;\n        }\n        this._ended = true;\n        this.endTime = core_1.timeInputToHrTime(endTime);\n        this._duration = core_1.hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            api.diag.warn('Inconsistent start and end time, startTime > endTime', this.startTime, this.endTime);\n        }\n        this._spanProcessor.onEnd(this);\n    }\n    isRecording() {\n        return this._ended === false;\n    }\n    recordException(exception, time = core_1.hrTime()) {\n        const attributes = {};\n        if (typeof exception === 'string') {\n            attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE] ||\n            attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]) {\n            this.addEvent(enums_1.ExceptionEventName, attributes, time);\n        }\n        else {\n            api.diag.warn(`Failed to record an exception ${exception}`);\n        }\n    }\n    get duration() {\n        return this._duration;\n    }\n    get ended() {\n        return this._ended;\n    }\n    _isSpanEnded() {\n        if (this._ended) {\n            api.diag.warn('Can not execute the operation on ended Span {traceId: %s, spanId: %s}', this.spanContext.traceId, this.spanContext.spanId);\n        }\n        return this._ended;\n    }\n}\nexports.Span = Span;\n//# sourceMappingURL=Span.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanProcessor.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst api = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst Span_1 = require(\"./Span\");\nconst utility_1 = require(\"./utility\");\n/**\n * This class represents a basic tracer.\n */\nclass Tracer {\n    /**\n     * Constructs a new Tracer instance.\n     */\n    constructor(instrumentationLibrary, config, _tracerProvider) {\n        this._tracerProvider = _tracerProvider;\n        const localConfig = utility_1.mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._traceParams = localConfig.traceParams;\n        this._idGenerator = config.idGenerator || new core_1.RandomIdGenerator();\n        this.resource = _tracerProvider.resource;\n        this.instrumentationLibrary = instrumentationLibrary;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    startSpan(name, options = {}, context = api.context.active()) {\n        var _a, _b;\n        if (api.isInstrumentationSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            return api.NOOP_TRACER.startSpan(name, options, context);\n        }\n        const parentContext = getParent(options, context);\n        const spanId = this._idGenerator.generateSpanId();\n        let traceId;\n        let traceState;\n        let parentSpanId;\n        if (!parentContext || !api.trace.isSpanContextValid(parentContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentContext.traceId;\n            traceState = parentContext.traceState;\n            parentSpanId = parentContext.spanId;\n        }\n        const spanKind = (_a = options.kind) !== null && _a !== void 0 ? _a : api.SpanKind.INTERNAL;\n        const links = (_b = options.links) !== null && _b !== void 0 ? _b : [];\n        const attributes = core_1.sanitizeAttributes(options.attributes);\n        // make sampling decision\n        const samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        const traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        const spanContext = { traceId, spanId, traceFlags, traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, starting no recording span');\n            return api.NOOP_TRACER.startSpan(name, options, api.setSpanContext(context, spanContext));\n        }\n        const span = new Span_1.Span(this, context, name, spanContext, spanKind, parentSpanId, links, options.startTime);\n        // Set default attributes\n        span.setAttributes(Object.assign(attributes, samplingResult.attributes));\n        return span;\n    }\n    /** Returns the active {@link TraceParams}. */\n    getActiveTraceParams() {\n        return this._traceParams;\n    }\n    getActiveSpanProcessor() {\n        return this._tracerProvider.getActiveSpanProcessor();\n    }\n}\nexports.Tracer = Tracer;\n/**\n * Get the parent to assign to a started span. If options.parent is null,\n * do not assign a parent.\n *\n * @param options span options\n * @param context context to check for parent\n */\nfunction getParent(options, context) {\n    if (options.root)\n        return undefined;\n    return api.getSpanContext(context);\n}\n//# sourceMappingURL=Tracer.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildSamplerFromEnv = exports.DEFAULT_CONFIG = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst env = core_1.getEnv();\n/**\n * Default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `traceParams`), the user-provided value will be\n * used to extend the default value.\n */\nexports.DEFAULT_CONFIG = {\n    sampler: buildSamplerFromEnv(env),\n    traceParams: {\n        numberOfAttributesPerSpan: core_1.getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n        numberOfLinksPerSpan: core_1.getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n        numberOfEventsPerSpan: core_1.getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n    },\n};\nconst FALLBACK_OTEL_TRACES_SAMPLER = core_1.TracesSamplerValues.AlwaysOn;\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param env optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nfunction buildSamplerFromEnv(env = core_1.getEnv()) {\n    switch (env.OTEL_TRACES_SAMPLER) {\n        case core_1.TracesSamplerValues.AlwaysOn:\n            return new core_1.AlwaysOnSampler();\n        case core_1.TracesSamplerValues.AlwaysOff:\n            return new core_1.AlwaysOffSampler();\n        case core_1.TracesSamplerValues.ParentBasedAlwaysOn:\n            return new core_1.ParentBasedSampler({\n                root: new core_1.AlwaysOnSampler(),\n            });\n        case core_1.TracesSamplerValues.ParentBasedAlwaysOff:\n            return new core_1.ParentBasedSampler({\n                root: new core_1.AlwaysOffSampler(),\n            });\n        case core_1.TracesSamplerValues.TraceIdRatio:\n            return new core_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(env));\n        case core_1.TracesSamplerValues.ParentBasedTraceIdRatio:\n            return new core_1.ParentBasedSampler({\n                root: new core_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(env)),\n            });\n        default:\n            api_1.diag.error(`OTEL_TRACES_SAMPLER value \"${env.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`);\n            return new core_1.AlwaysOnSampler();\n    }\n}\nexports.buildSamplerFromEnv = buildSamplerFromEnv;\nconst DEFAULT_RATIO = 1;\nfunction getSamplerProbabilityFromEnv(env) {\n    if (env.OTEL_TRACES_SAMPLER_ARG === undefined ||\n        env.OTEL_TRACES_SAMPLER_ARG === '') {\n        api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    const probability = Number(env.OTEL_TRACES_SAMPLER_ARG);\n    if (isNaN(probability)) {\n        api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${env.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${env.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExceptionEventName = void 0;\n// Event name definitions\nexports.ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchSpanProcessor = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nclass BatchSpanProcessor {\n    constructor(_exporter, config) {\n        this._exporter = _exporter;\n        this._finishedSpans = [];\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        const env = core_1.getEnv();\n        this._maxExportBatchSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxExportBatchSize) === 'number'\n                ? config.maxExportBatchSize\n                : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n        this._maxQueueSize =\n            typeof (config === null || config === void 0 ? void 0 : config.maxQueueSize) === 'number'\n                ? config === null || config === void 0 ? void 0 : config.maxQueueSize\n                : env.OTEL_BSP_MAX_QUEUE_SIZE;\n        this._scheduledDelayMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.scheduledDelayMillis) === 'number'\n                ? config === null || config === void 0 ? void 0 : config.scheduledDelayMillis\n                : env.OTEL_BSP_SCHEDULE_DELAY;\n        this._exportTimeoutMillis =\n            typeof (config === null || config === void 0 ? void 0 : config.exportTimeoutMillis) === 'number'\n                ? config === null || config === void 0 ? void 0 : config.exportTimeoutMillis\n                : env.OTEL_BSP_EXPORT_TIMEOUT;\n    }\n    forceFlush() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        return this._flushAll();\n    }\n    // does nothing.\n    onStart(_span) { }\n    onEnd(span) {\n        if (this._isShutdown) {\n            return;\n        }\n        this._addToBuffer(span);\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._flushAll();\n            })\n                .then(() => {\n                return this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n    /** Add a span in the buffer. */\n    _addToBuffer(span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            return;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    }\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    _flushAll() {\n        return new Promise((resolve, reject) => {\n            const promises = [];\n            // calculate number of batches\n            const count = Math.ceil(this._finishedSpans.length / this._maxExportBatchSize);\n            for (let i = 0, j = count; i < j; i++) {\n                promises.push(this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(reject);\n        });\n    }\n    _flushOneBatch() {\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const timer = setTimeout(() => {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            api_1.context.with(api_1.suppressInstrumentation(api_1.context.active()), () => {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside of the execution of this callback.\n                this._exporter.export(this._finishedSpans.splice(0, this._maxExportBatchSize), result => {\n                    var _a;\n                    clearTimeout(timer);\n                    if (result.code === core_1.ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject((_a = result.error) !== null && _a !== void 0 ? _a : new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n            });\n        });\n    }\n    _maybeStartTimer() {\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(() => {\n            this._flushOneBatch()\n                .then(() => {\n                if (this._finishedSpans.length > 0) {\n                    this._clearTimer();\n                    this._maybeStartTimer();\n                }\n            })\n                .catch(e => {\n                core_1.globalErrorHandler(e);\n            });\n        }, this._scheduledDelayMillis);\n        core_1.unrefTimer(this._timer);\n    }\n    _clearTimer() {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    }\n}\nexports.BatchSpanProcessor = BatchSpanProcessor;\n//# sourceMappingURL=BatchSpanProcessor.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleSpanExporter = void 0;\nconst core_1 = require(\"@opentelemetry/core\");\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n */\n/* eslint-disable no-console */\nclass ConsoleSpanExporter {\n    /**\n     * Export spans.\n     * @param spans\n     * @param resultCallback\n     */\n    export(spans, resultCallback) {\n        return this._sendSpans(spans, resultCallback);\n    }\n    /**\n     * Shutdown the exporter.\n     */\n    shutdown() {\n        this._sendSpans([]);\n        return Promise.resolve();\n    }\n    /**\n     * converts span info into more readable format\n     * @param span\n     */\n    _exportInfo(span) {\n        return {\n            traceId: span.spanContext.traceId,\n            parentId: span.parentSpanId,\n            name: span.name,\n            id: span.spanContext.spanId,\n            kind: span.kind,\n            timestamp: core_1.hrTimeToMicroseconds(span.startTime),\n            duration: core_1.hrTimeToMicroseconds(span.duration),\n            attributes: span.attributes,\n            status: span.status,\n            events: span.events,\n        };\n    }\n    /**\n     * Showing spans in console\n     * @param spans\n     * @param done\n     */\n    _sendSpans(spans, done) {\n        for (const span of spans) {\n            console.log(this._exportInfo(span));\n        }\n        if (done) {\n            return done({ code: core_1.ExportResultCode.SUCCESS });\n        }\n    }\n}\nexports.ConsoleSpanExporter = ConsoleSpanExporter;\n//# sourceMappingURL=ConsoleSpanExporter.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySpanExporter = void 0;\nconst core_1 = require(\"@opentelemetry/core\");\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nclass InMemorySpanExporter {\n    constructor() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    export(spans, resultCallback) {\n        if (this._stopped)\n            return resultCallback({\n                code: core_1.ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        this._finishedSpans.push(...spans);\n        setTimeout(() => resultCallback({ code: core_1.ExportResultCode.SUCCESS }), 0);\n    }\n    shutdown() {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    }\n    reset() {\n        this._finishedSpans = [];\n    }\n    getFinishedSpans() {\n        return this._finishedSpans;\n    }\n}\nexports.InMemorySpanExporter = InMemorySpanExporter;\n//# sourceMappingURL=InMemorySpanExporter.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ReadableSpan.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleSpanProcessor = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n */\nclass SimpleSpanProcessor {\n    constructor(_exporter) {\n        this._exporter = _exporter;\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n    }\n    forceFlush() {\n        // do nothing as all spans are being exported without waiting\n        return Promise.resolve();\n    }\n    // does nothing.\n    onStart(_span) { }\n    onEnd(span) {\n        if (this._isShutdown) {\n            return;\n        }\n        // prevent downstream exporter calls from generating spans\n        api_1.context.with(api_1.suppressInstrumentation(api_1.context.active()), () => {\n            this._exporter.export([span], result => {\n                var _a;\n                if (result.code !== core_1.ExportResultCode.SUCCESS) {\n                    core_1.globalErrorHandler((_a = result.error) !== null && _a !== void 0 ? _a : new Error(`SimpleSpanProcessor: span export failed (status ${result})`));\n                }\n            });\n        });\n    }\n    shutdown() {\n        if (this._isShutdown) {\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        this._shuttingDownPromise = new Promise((resolve, reject) => {\n            Promise.resolve()\n                .then(() => {\n                return this._exporter.shutdown();\n            })\n                .then(resolve)\n                .catch(e => {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    }\n}\nexports.SimpleSpanProcessor = SimpleSpanProcessor;\n//# sourceMappingURL=SimpleSpanProcessor.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SpanExporter.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Tracer\"), exports);\n__exportStar(require(\"./BasicTracerProvider\"), exports);\n__exportStar(require(\"./export/ConsoleSpanExporter\"), exports);\n__exportStar(require(\"./export/BatchSpanProcessor\"), exports);\n__exportStar(require(\"./export/InMemorySpanExporter\"), exports);\n__exportStar(require(\"./export/ReadableSpan\"), exports);\n__exportStar(require(\"./export/SimpleSpanProcessor\"), exports);\n__exportStar(require(\"./export/SpanExporter\"), exports);\n__exportStar(require(\"./Span\"), exports);\n__exportStar(require(\"./SpanProcessor\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeConfig = void 0;\nconst config_1 = require(\"./config\");\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nfunction mergeConfig(userConfig) {\n    const perInstanceDefaults = {\n        sampler: config_1.buildSamplerFromEnv(),\n    };\n    const target = Object.assign({}, config_1.DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.traceParams = Object.assign({}, config_1.DEFAULT_CONFIG.traceParams, userConfig.traceParams || {});\n    return target;\n}\nexports.mergeConfig = mergeConfig;\n//# sourceMappingURL=utility.js.map","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n"],"sourceRoot":""}